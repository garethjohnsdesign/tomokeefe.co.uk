{"version":3,"file":"index.es.js","sources":["../node_modules/json-stringify-pretty-compact/index.js","../format.js","../../../node_modules/url/node_modules/punycode/punycode.js","../../../node_modules/url/util.js","../../../node_modules/querystring/decode.js","../../../node_modules/querystring/encode.js","../../../node_modules/querystring/index.js","../../../node_modules/url/url.js","../visit.js","../migrate/v8.js","../util/extend.js","../expression/parsing_error.js","../expression/scope.js","../expression/types.js","../node_modules/csscolorparser/csscolorparser.js","../util/color.js","../expression/types/collator.js","../expression/types/formatted.js","../expression/values.js","../expression/definitions/literal.js","../expression/runtime_error.js","../expression/definitions/assertion.js","../expression/definitions/format.js","../expression/definitions/coercion.js","../expression/evaluation_context.js","../expression/compound_expression.js","../expression/definitions/collator.js","../expression/is_constant.js","../expression/definitions/var.js","../expression/parsing_context.js","../expression/stops.js","../expression/definitions/step.js","../node_modules/@mapbox/unitbezier/index.js","../util/interpolate.js","../util/color_spaces.js","../expression/definitions/interpolate.js","../expression/definitions/coalesce.js","../expression/definitions/let.js","../expression/definitions/at.js","../expression/definitions/match.js","../expression/definitions/case.js","../expression/definitions/comparison.js","../expression/definitions/number_format.js","../expression/definitions/length.js","../expression/definitions/index.js","../util/result.js","../util/properties.js","../util/get_type.js","../function/index.js","../expression/index.js","../function/convert.js","../feature_filter/index.js","../feature_filter/convert.js","../migrate/expressions.js","../migrate.js","../composite.js","../util/deep_equal.js","../diff.js","../error/validation_error.js","../error/parsing_error.js","../validate/validate_constants.js","../util/unbundle_jsonlint.js","../validate/validate_object.js","../validate/validate_array.js","../validate/validate_number.js","../validate/validate_function.js","../validate/validate_expression.js","../validate/validate_boolean.js","../validate/validate_color.js","../validate/validate_enum.js","../validate/validate_filter.js","../validate/validate_property.js","../validate/validate_paint_property.js","../validate/validate_layout_property.js","../validate/validate_layer.js","../validate/validate_source.js","../validate/validate_light.js","../validate/validate_string.js","../validate/validate_formatted.js","../validate/validate.js","../validate/validate_glyphs_url.js","../validate_style.min.js","../node_modules/@mapbox/jsonlint-lines-primitives/lib/jsonlint.js","../validate_style.js","../style-spec.js"],"sourcesContent":["\"use strict\";\n\n// Note: This regex matches even invalid JSON strings, but since we’re\n// working on the output of `JSON.stringify` we know that only valid strings\n// are present (unless the user supplied a weird `options.indent` but in\n// that case we don’t care since the output would be invalid anyway).\nvar stringOrChar = /(\"(?:[^\\\\\"]|\\\\.)*\")|[:,]/g;\n\nmodule.exports = function stringify(passedObj, options) {\n  var indent, maxLength, replacer;\n\n  options = options || {};\n  indent = JSON.stringify(\n    [1],\n    undefined,\n    options.indent === undefined ? 2 : options.indent\n  ).slice(2, -3);\n  maxLength =\n    indent === \"\"\n      ? Infinity\n      : options.maxLength === undefined\n      ? 80\n      : options.maxLength;\n  replacer = options.replacer;\n\n  return (function _stringify(obj, currentIndent, reserved) {\n    // prettier-ignore\n    var end, index, items, key, keyPart, keys, length, nextIndent, prettified, start, string, value;\n\n    if (obj && typeof obj.toJSON === \"function\") {\n      obj = obj.toJSON();\n    }\n\n    string = JSON.stringify(obj, replacer);\n\n    if (string === undefined) {\n      return string;\n    }\n\n    length = maxLength - currentIndent.length - reserved;\n\n    if (string.length <= length) {\n      prettified = string.replace(stringOrChar, function(match, stringLiteral) {\n        return stringLiteral || match + \" \";\n      });\n      if (prettified.length <= length) {\n        return prettified;\n      }\n    }\n\n    if (replacer != null) {\n      obj = JSON.parse(string);\n      replacer = undefined;\n    }\n\n    if (typeof obj === \"object\" && obj !== null) {\n      nextIndent = currentIndent + indent;\n      items = [];\n      index = 0;\n\n      if (Array.isArray(obj)) {\n        start = \"[\";\n        end = \"]\";\n        length = obj.length;\n        for (; index < length; index++) {\n          items.push(\n            _stringify(obj[index], nextIndent, index === length - 1 ? 0 : 1) ||\n              \"null\"\n          );\n        }\n      } else {\n        start = \"{\";\n        end = \"}\";\n        keys = Object.keys(obj);\n        length = keys.length;\n        for (; index < length; index++) {\n          key = keys[index];\n          keyPart = JSON.stringify(key) + \": \";\n          value = _stringify(\n            obj[key],\n            nextIndent,\n            keyPart.length + (index === length - 1 ? 0 : 1)\n          );\n          if (value !== undefined) {\n            items.push(keyPart + value);\n          }\n        }\n      }\n\n      if (items.length > 0) {\n        return [start, indent + items.join(\",\\n\" + nextIndent), end].join(\n          \"\\n\" + currentIndent\n        );\n      }\n    }\n\n    return string;\n  })(passedObj, \"\", 0);\n};\n","\nimport reference from './reference/latest.js';\nimport stringifyPretty from 'json-stringify-pretty-compact';\n\nfunction sortKeysBy(obj, reference) {\n    const result = {};\n    for (const key in reference) {\n        if (obj[key] !== undefined) {\n            result[key] = obj[key];\n        }\n    }\n    for (const key in obj) {\n        if (result[key] === undefined) {\n            result[key] = obj[key];\n        }\n    }\n    return result;\n}\n\n/**\n * Format a Mapbox GL Style.  Returns a stringified style with its keys\n * sorted in the same order as the reference style.\n *\n * The optional `space` argument is passed to\n * [`JSON.stringify`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify)\n * to generate formatted output.\n *\n * If `space` is unspecified, a default of `2` spaces will be used.\n *\n * @private\n * @param {Object} style a Mapbox GL Style\n * @param {number} [space] space argument to pass to `JSON.stringify`\n * @returns {string} stringified formatted JSON\n * @example\n * var fs = require('fs');\n * var format = require('mapbox-gl-style-spec').format;\n * var style = fs.readFileSync('./source.json', 'utf8');\n * fs.writeFileSync('./dest.json', format(style));\n * fs.writeFileSync('./dest.min.json', format(style, 0));\n */\nfunction format(style, space = 2) {\n    style = sortKeysBy(style, reference.$root);\n\n    if (style.layers) {\n        style.layers = style.layers.map((layer) => sortKeysBy(layer, reference.layer));\n    }\n\n    return stringifyPretty(style, {indent: space});\n}\n\nexport default format;\n","/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","// @flow\n\nimport Reference from './reference/v8.json';\nimport type {StylePropertySpecification} from './style-spec';\nimport type {\n    StyleSpecification,\n    SourceSpecification,\n    LayerSpecification,\n    PropertyValueSpecification,\n    DataDrivenPropertyValueSpecification\n} from './types';\n\nfunction getPropertyReference(propertyName): StylePropertySpecification {\n    for (let i = 0; i < Reference.layout.length; i++) {\n        for (const key in Reference[Reference.layout[i]]) {\n            if (key === propertyName) return (Reference[Reference.layout[i]][key]: any);\n        }\n    }\n    for (let i = 0; i < Reference.paint.length; i++) {\n        for (const key in Reference[Reference.paint[i]]) {\n            if (key === propertyName) return (Reference[Reference.paint[i]][key]: any);\n        }\n    }\n\n    return (null: any);\n}\n\nexport function eachSource(style: StyleSpecification, callback: (SourceSpecification) => void) {\n    for (const k in style.sources) {\n        callback(style.sources[k]);\n    }\n}\n\nexport function eachLayer(style: StyleSpecification, callback: (LayerSpecification) => void) {\n    for (const layer of style.layers) {\n        callback(layer);\n    }\n}\n\ntype PropertyCallback = ({\n    path: [string, 'paint' | 'layout', string], // [layerid, paint/layout, property key]\n    key: string,\n    value: PropertyValueSpecification<mixed> | DataDrivenPropertyValueSpecification<mixed>,\n    reference: StylePropertySpecification,\n    set: (PropertyValueSpecification<mixed> | DataDrivenPropertyValueSpecification<mixed>) => void\n}) => void;\n\nexport function eachProperty(\n    style: StyleSpecification,\n    options: {paint?: boolean, layout?: boolean},\n    callback: PropertyCallback\n) {\n    function inner(layer, propertyType: 'paint' | 'layout') {\n        const properties = (layer[propertyType]: any);\n        if (!properties) return;\n        Object.keys(properties).forEach((key) => {\n            callback({\n                path: [layer.id, propertyType, key],\n                key,\n                value: properties[key],\n                reference: getPropertyReference(key),\n                set(x) {\n                    properties[key] = x;\n                }\n            });\n        });\n    }\n\n    eachLayer(style, (layer) => {\n        if (options.paint) {\n            inner(layer, 'paint');\n        }\n        if (options.layout) {\n            inner(layer, 'layout');\n        }\n    });\n}\n","\nimport URL from 'url';\nimport {eachSource, eachLayer, eachProperty} from '../visit';\n\nfunction eachLayout(layer, callback) {\n    for (const k in layer) {\n        if (k.indexOf('layout') === 0) {\n            callback(layer[k], k);\n        }\n    }\n}\n\nfunction eachPaint(layer, callback) {\n    for (const k in layer) {\n        if (k.indexOf('paint') === 0) {\n            callback(layer[k], k);\n        }\n    }\n}\n\nfunction resolveConstant(style, value) {\n    if (typeof value === 'string' && value[0] === '@') {\n        return resolveConstant(style, style.constants[value]);\n    } else {\n        return value;\n    }\n}\n\nfunction isFunction(value) {\n    return Array.isArray(value.stops);\n}\n\nfunction renameProperty(obj, from, to) {\n    obj[to] = obj[from]; delete obj[from];\n}\n\nexport default function(style) {\n    style.version = 8;\n\n    // Rename properties, reverse coordinates in source and layers\n    eachSource(style, (source) => {\n        if (source.type === 'video' && source.url !== undefined) {\n            renameProperty(source, 'url', 'urls');\n        }\n        if (source.type === 'video') {\n            source.coordinates.forEach((coord) => {\n                return coord.reverse();\n            });\n        }\n    });\n\n    eachLayer(style, (layer) => {\n        eachLayout(layer, (layout) => {\n            if (layout['symbol-min-distance'] !== undefined) {\n                renameProperty(layout, 'symbol-min-distance', 'symbol-spacing');\n            }\n        });\n\n        eachPaint(layer, (paint) => {\n            if (paint['background-image'] !== undefined) {\n                renameProperty(paint, 'background-image', 'background-pattern');\n            }\n            if (paint['line-image'] !== undefined) {\n                renameProperty(paint, 'line-image', 'line-pattern');\n            }\n            if (paint['fill-image'] !== undefined) {\n                renameProperty(paint, 'fill-image', 'fill-pattern');\n            }\n        });\n    });\n\n    // Inline Constants\n    eachProperty(style, {paint: true, layout: true}, (property) => {\n        const value = resolveConstant(style, property.value);\n\n        if (isFunction(value)) {\n            value.stops.forEach((stop) => {\n                stop[1] = resolveConstant(style, stop[1]);\n            });\n        }\n\n        property.set(value);\n    });\n    delete style.constants;\n\n    eachLayer(style, (layer) => {\n        // get rid of text-max-size, icon-max-size\n        // turn text-size, icon-size into layout properties\n        // https://github.com/mapbox/mapbox-gl-style-spec/issues/255\n\n        eachLayout(layer, (layout) => {\n            delete layout['text-max-size'];\n            delete layout['icon-max-size'];\n        });\n\n        eachPaint(layer, (paint) => {\n            if (paint['text-size']) {\n                if (!layer.layout) layer.layout = {};\n                layer.layout['text-size'] = paint['text-size'];\n                delete paint['text-size'];\n            }\n\n            if (paint['icon-size']) {\n                if (!layer.layout) layer.layout = {};\n                layer.layout['icon-size'] = paint['icon-size'];\n                delete paint['icon-size'];\n            }\n        });\n    });\n\n    function migrateFontstackURL(input) {\n        const inputParsed = URL.parse(input);\n        const inputPathnameParts = inputParsed.pathname.split('/');\n\n        if (inputParsed.protocol !== 'mapbox:') {\n            return input;\n\n        } else if (inputParsed.hostname === 'fontstack') {\n            assert(decodeURI(inputParsed.pathname) === '/{fontstack}/{range}.pbf');\n            return 'mapbox://fonts/mapbox/{fontstack}/{range}.pbf';\n\n        } else if (inputParsed.hostname === 'fonts') {\n            assert(inputPathnameParts[1] === 'v1');\n            assert(decodeURI(inputPathnameParts[3]) === '{fontstack}');\n            assert(decodeURI(inputPathnameParts[4]) === '{range}.pbf');\n            return `mapbox://fonts/${inputPathnameParts[2]}/{fontstack}/{range}.pbf`;\n\n        } else {\n            assert(false);\n        }\n\n        function assert(predicate) {\n            if (!predicate) {\n                throw new Error(`Invalid font url: \"${input}\"`);\n            }\n        }\n    }\n\n    if (style.glyphs) {\n        style.glyphs = migrateFontstackURL(style.glyphs);\n    }\n\n    function migrateFontStack(font) {\n        function splitAndTrim(string) {\n            return string.split(',').map((s) => {\n                return s.trim();\n            });\n        }\n\n        if (Array.isArray(font)) {\n            // Assume it's a previously migrated font-array.\n            return font;\n\n        } else if (typeof font === 'string') {\n            return splitAndTrim(font);\n\n        } else if (typeof font === 'object') {\n            font.stops.forEach((stop) => {\n                stop[1] = splitAndTrim(stop[1]);\n            });\n            return font;\n\n        } else {\n            throw new Error(\"unexpected font value\");\n        }\n    }\n\n    eachLayer(style, (layer) => {\n        eachLayout(layer, (layout) => {\n            if (layout['text-font']) {\n                layout['text-font'] = migrateFontStack(layout['text-font']);\n            }\n        });\n    });\n\n    // Reverse order of symbol layers. This is an imperfect migration.\n    //\n    // The order of a symbol layer in the layers list affects two things:\n    // - how it is drawn relative to other layers (like oneway arrows below bridges)\n    // - the placement priority compared to other layers\n    //\n    // It's impossible to reverse the placement priority without breaking the draw order\n    // in some cases. This migration only reverses the order of symbol layers that\n    // are above all other types of layers.\n    //\n    // Symbol layers that are at the top of the map preserve their priority.\n    // Symbol layers that are below another type (line, fill) of layer preserve their draw order.\n\n    let firstSymbolLayer = 0;\n    for (let i = style.layers.length - 1; i >= 0; i--) {\n        const layer = style.layers[i];\n        if (layer.type !== 'symbol') {\n            firstSymbolLayer = i + 1;\n            break;\n        }\n    }\n\n    const symbolLayers = style.layers.splice(firstSymbolLayer);\n    symbolLayers.reverse();\n    style.layers = style.layers.concat(symbolLayers);\n\n    return style;\n}\n","\nexport default function (output, ...inputs) {\n    for (const input of inputs) {\n        for (const k in input) {\n            output[k] = input[k];\n        }\n    }\n    return output;\n}\n","// @flow\n\nclass ParsingError extends Error {\n    key: string;\n    message: string;\n    constructor(key: string, message: string) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\n\nexport default ParsingError;\n","// @flow\n\nimport type {Expression} from './expression';\n\n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n    parent: ?Scope;\n    bindings: {[string]: Expression};\n    constructor(parent?: Scope, bindings: Array<[string, Expression]> = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n\n    concat(bindings: Array<[string, Expression]>) {\n        return new Scope(this, bindings);\n    }\n\n    get(name: string): Expression {\n        if (this.bindings[name]) { return this.bindings[name]; }\n        if (this.parent) { return this.parent.get(name); }\n        throw new Error(`${name} not found in scope.`);\n    }\n\n    has(name: string): boolean {\n        if (this.bindings[name]) return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\n\nexport default Scope;\n","// @flow\n\nexport type NullTypeT = { kind: 'null' };\nexport type NumberTypeT = { kind: 'number' };\nexport type StringTypeT = { kind: 'string' };\nexport type BooleanTypeT = { kind: 'boolean' };\nexport type ColorTypeT = { kind: 'color' };\nexport type ObjectTypeT = { kind: 'object' };\nexport type ValueTypeT = { kind: 'value' };\nexport type ErrorTypeT = { kind: 'error' };\nexport type CollatorTypeT = { kind: 'collator' };\nexport type FormattedTypeT = { kind: 'formatted' };\n\nexport type EvaluationKind = 'constant' | 'source' | 'camera' | 'composite';\n\nexport type Type =\n    NullTypeT |\n    NumberTypeT |\n    StringTypeT |\n    BooleanTypeT |\n    ColorTypeT |\n    ObjectTypeT |\n    ValueTypeT |\n    ArrayType | // eslint-disable-line no-use-before-define\n    ErrorTypeT |\n    CollatorTypeT |\n    FormattedTypeT\n\nexport type ArrayType = {\n    kind: 'array',\n    itemType: Type,\n    N: ?number\n}\n\nexport const NullType = { kind: 'null' };\nexport const NumberType = { kind: 'number' };\nexport const StringType = { kind: 'string' };\nexport const BooleanType = { kind: 'boolean' };\nexport const ColorType = { kind: 'color' };\nexport const ObjectType = { kind: 'object' };\nexport const ValueType = { kind: 'value' };\nexport const ErrorType = { kind: 'error' };\nexport const CollatorType = { kind: 'collator' };\nexport const FormattedType = { kind: 'formatted' };\n\nexport function array(itemType: Type, N: ?number): ArrayType {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\n\nexport function toString(type: Type): string {\n    if (type.kind === 'array') {\n        const itemType = toString(type.itemType);\n        return typeof type.N === 'number' ?\n            `array<${itemType}, ${type.N}>` :\n            type.itemType.kind === 'value' ? 'array' : `array<${itemType}>`;\n    } else {\n        return type.kind;\n    }\n}\n\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    FormattedType,\n    ObjectType,\n    array(ValueType)\n];\n\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nexport function checkSubtype(expected: Type, t: Type): ?string {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    } else if (expected.kind === 'array') {\n        if (t.kind === 'array' &&\n            ((t.N === 0 && t.itemType.kind === 'value') || !checkSubtype(expected.itemType, t.itemType)) &&\n            (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    } else if (expected.kind === t.kind) {\n        return null;\n    } else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n\n    return `Expected ${toString(expected)} but found ${toString(t)} instead.`;\n}\n","// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n  \"transparent\": [0,0,0,0], \"aliceblue\": [240,248,255,1],\n  \"antiquewhite\": [250,235,215,1], \"aqua\": [0,255,255,1],\n  \"aquamarine\": [127,255,212,1], \"azure\": [240,255,255,1],\n  \"beige\": [245,245,220,1], \"bisque\": [255,228,196,1],\n  \"black\": [0,0,0,1], \"blanchedalmond\": [255,235,205,1],\n  \"blue\": [0,0,255,1], \"blueviolet\": [138,43,226,1],\n  \"brown\": [165,42,42,1], \"burlywood\": [222,184,135,1],\n  \"cadetblue\": [95,158,160,1], \"chartreuse\": [127,255,0,1],\n  \"chocolate\": [210,105,30,1], \"coral\": [255,127,80,1],\n  \"cornflowerblue\": [100,149,237,1], \"cornsilk\": [255,248,220,1],\n  \"crimson\": [220,20,60,1], \"cyan\": [0,255,255,1],\n  \"darkblue\": [0,0,139,1], \"darkcyan\": [0,139,139,1],\n  \"darkgoldenrod\": [184,134,11,1], \"darkgray\": [169,169,169,1],\n  \"darkgreen\": [0,100,0,1], \"darkgrey\": [169,169,169,1],\n  \"darkkhaki\": [189,183,107,1], \"darkmagenta\": [139,0,139,1],\n  \"darkolivegreen\": [85,107,47,1], \"darkorange\": [255,140,0,1],\n  \"darkorchid\": [153,50,204,1], \"darkred\": [139,0,0,1],\n  \"darksalmon\": [233,150,122,1], \"darkseagreen\": [143,188,143,1],\n  \"darkslateblue\": [72,61,139,1], \"darkslategray\": [47,79,79,1],\n  \"darkslategrey\": [47,79,79,1], \"darkturquoise\": [0,206,209,1],\n  \"darkviolet\": [148,0,211,1], \"deeppink\": [255,20,147,1],\n  \"deepskyblue\": [0,191,255,1], \"dimgray\": [105,105,105,1],\n  \"dimgrey\": [105,105,105,1], \"dodgerblue\": [30,144,255,1],\n  \"firebrick\": [178,34,34,1], \"floralwhite\": [255,250,240,1],\n  \"forestgreen\": [34,139,34,1], \"fuchsia\": [255,0,255,1],\n  \"gainsboro\": [220,220,220,1], \"ghostwhite\": [248,248,255,1],\n  \"gold\": [255,215,0,1], \"goldenrod\": [218,165,32,1],\n  \"gray\": [128,128,128,1], \"green\": [0,128,0,1],\n  \"greenyellow\": [173,255,47,1], \"grey\": [128,128,128,1],\n  \"honeydew\": [240,255,240,1], \"hotpink\": [255,105,180,1],\n  \"indianred\": [205,92,92,1], \"indigo\": [75,0,130,1],\n  \"ivory\": [255,255,240,1], \"khaki\": [240,230,140,1],\n  \"lavender\": [230,230,250,1], \"lavenderblush\": [255,240,245,1],\n  \"lawngreen\": [124,252,0,1], \"lemonchiffon\": [255,250,205,1],\n  \"lightblue\": [173,216,230,1], \"lightcoral\": [240,128,128,1],\n  \"lightcyan\": [224,255,255,1], \"lightgoldenrodyellow\": [250,250,210,1],\n  \"lightgray\": [211,211,211,1], \"lightgreen\": [144,238,144,1],\n  \"lightgrey\": [211,211,211,1], \"lightpink\": [255,182,193,1],\n  \"lightsalmon\": [255,160,122,1], \"lightseagreen\": [32,178,170,1],\n  \"lightskyblue\": [135,206,250,1], \"lightslategray\": [119,136,153,1],\n  \"lightslategrey\": [119,136,153,1], \"lightsteelblue\": [176,196,222,1],\n  \"lightyellow\": [255,255,224,1], \"lime\": [0,255,0,1],\n  \"limegreen\": [50,205,50,1], \"linen\": [250,240,230,1],\n  \"magenta\": [255,0,255,1], \"maroon\": [128,0,0,1],\n  \"mediumaquamarine\": [102,205,170,1], \"mediumblue\": [0,0,205,1],\n  \"mediumorchid\": [186,85,211,1], \"mediumpurple\": [147,112,219,1],\n  \"mediumseagreen\": [60,179,113,1], \"mediumslateblue\": [123,104,238,1],\n  \"mediumspringgreen\": [0,250,154,1], \"mediumturquoise\": [72,209,204,1],\n  \"mediumvioletred\": [199,21,133,1], \"midnightblue\": [25,25,112,1],\n  \"mintcream\": [245,255,250,1], \"mistyrose\": [255,228,225,1],\n  \"moccasin\": [255,228,181,1], \"navajowhite\": [255,222,173,1],\n  \"navy\": [0,0,128,1], \"oldlace\": [253,245,230,1],\n  \"olive\": [128,128,0,1], \"olivedrab\": [107,142,35,1],\n  \"orange\": [255,165,0,1], \"orangered\": [255,69,0,1],\n  \"orchid\": [218,112,214,1], \"palegoldenrod\": [238,232,170,1],\n  \"palegreen\": [152,251,152,1], \"paleturquoise\": [175,238,238,1],\n  \"palevioletred\": [219,112,147,1], \"papayawhip\": [255,239,213,1],\n  \"peachpuff\": [255,218,185,1], \"peru\": [205,133,63,1],\n  \"pink\": [255,192,203,1], \"plum\": [221,160,221,1],\n  \"powderblue\": [176,224,230,1], \"purple\": [128,0,128,1],\n  \"rebeccapurple\": [102,51,153,1],\n  \"red\": [255,0,0,1], \"rosybrown\": [188,143,143,1],\n  \"royalblue\": [65,105,225,1], \"saddlebrown\": [139,69,19,1],\n  \"salmon\": [250,128,114,1], \"sandybrown\": [244,164,96,1],\n  \"seagreen\": [46,139,87,1], \"seashell\": [255,245,238,1],\n  \"sienna\": [160,82,45,1], \"silver\": [192,192,192,1],\n  \"skyblue\": [135,206,235,1], \"slateblue\": [106,90,205,1],\n  \"slategray\": [112,128,144,1], \"slategrey\": [112,128,144,1],\n  \"snow\": [255,250,250,1], \"springgreen\": [0,255,127,1],\n  \"steelblue\": [70,130,180,1], \"tan\": [210,180,140,1],\n  \"teal\": [0,128,128,1], \"thistle\": [216,191,216,1],\n  \"tomato\": [255,99,71,1], \"turquoise\": [64,224,208,1],\n  \"violet\": [238,130,238,1], \"wheat\": [245,222,179,1],\n  \"white\": [255,255,255,1], \"whitesmoke\": [245,245,245,1],\n  \"yellow\": [255,255,0,1], \"yellowgreen\": [154,205,50,1]}\n\nfunction clamp_css_byte(i) {  // Clamp to integer 0 .. 255.\n  i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clamp_css_float(f) {  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parse_css_int(str) {  // int or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_byte(parseFloat(str) / 100 * 255);\n  return clamp_css_byte(parseInt(str));\n}\n\nfunction parse_css_float(str) {  // float or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_float(parseFloat(str) / 100);\n  return clamp_css_float(parseFloat(str));\n}\n\nfunction css_hue_to_rgb(m1, m2, h) {\n  if (h < 0) h += 1;\n  else if (h > 1) h -= 1;\n\n  if (h * 6 < 1) return m1 + (m2 - m1) * h * 6;\n  if (h * 2 < 1) return m2;\n  if (h * 3 < 2) return m1 + (m2 - m1) * (2/3 - h) * 6;\n  return m1;\n}\n\nfunction parseCSSColor(css_str) {\n  // Remove all whitespace, not compliant, but should just be more accepting.\n  var str = css_str.replace(/ /g, '').toLowerCase();\n\n  // Color keywords (and transparent) lookup.\n  if (str in kCSSColorTable) return kCSSColorTable[str].slice();  // dup.\n\n  // #abc and #abc123 syntax.\n  if (str[0] === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xfff)) return null;  // Covers NaN.\n      return [((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n              (iv & 0xf0) | ((iv & 0xf0) >> 4),\n              (iv & 0xf) | ((iv & 0xf) << 4),\n              1];\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xffffff)) return null;  // Covers NaN.\n      return [(iv & 0xff0000) >> 16,\n              (iv & 0xff00) >> 8,\n              iv & 0xff,\n              1];\n    }\n\n    return null;\n  }\n\n  var op = str.indexOf('('), ep = str.indexOf(')');\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op+1, ep-(op+1)).split(',');\n    var alpha = 1;  // To allow case fallthrough.\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'rgb':\n        if (params.length !== 3) return null;\n        return [parse_css_int(params[0]),\n                parse_css_int(params[1]),\n                parse_css_int(params[2]),\n                alpha];\n      case 'hsla':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'hsl':\n        if (params.length !== 3) return null;\n        var h = (((parseFloat(params[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parse_css_float(params[1]);\n        var l = parse_css_float(params[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n        return [clamp_css_byte(css_hue_to_rgb(m1, m2, h+1/3) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h-1/3) * 255),\n                alpha];\n      default:\n        return null;\n    }\n  }\n\n  return null;\n}\n\ntry { exports.parseCSSColor = parseCSSColor } catch(e) { }\n","// @flow\n\nimport { parseCSSColor } from 'csscolorparser';\n\n/**\n * An RGBA color value. Create instances from color strings using the static\n * method `Color.parse`. The constructor accepts RGB channel values in the range\n * `[0, 1]`, premultiplied by A.\n *\n * @param {number} r The red channel.\n * @param {number} g The green channel.\n * @param {number} b The blue channel.\n * @param {number} a The alpha channel.\n * @private\n */\nclass Color {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n\n    constructor(r: number, g: number, b: number, a: number = 1) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n    static black: Color;\n    static white: Color;\n    static transparent: Color;\n    static red: Color;\n\n    /**\n     * Parses valid CSS color strings and returns a `Color` instance.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input: ?string): Color | void {\n        if (!input) {\n            return undefined;\n        }\n\n        if (input instanceof Color) {\n            return input;\n        }\n\n        if (typeof input !== 'string') {\n            return undefined;\n        }\n\n        const rgba = parseCSSColor(input);\n        if (!rgba) {\n            return undefined;\n        }\n\n        return new Color(\n            rgba[0] / 255 * rgba[3],\n            rgba[1] / 255 * rgba[3],\n            rgba[2] / 255 * rgba[3],\n            rgba[3]\n        );\n    }\n\n    /**\n     * Returns an RGBA string representing the color value.\n     *\n     * @returns An RGBA string.\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString(): string {\n        const [r, g, b, a] = this.toArray();\n        return `rgba(${Math.round(r)},${Math.round(g)},${Math.round(b)},${a})`;\n    }\n\n    toArray(): [number, number, number, number] {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r * 255 / a,\n            g * 255 / a,\n            b * 255 / a,\n            a\n        ];\n    }\n}\n\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\n\nexport default Color;\n","// @flow\n\n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\n\ndeclare var Intl: {\n    Collator: Class<Intl$Collator>\n};\n\ndeclare class Intl$Collator {\n    constructor (\n        locales?: string | string[],\n        options?: CollatorOptions\n    ): Intl$Collator;\n\n    static (\n        locales?: string | string[],\n        options?: CollatorOptions\n    ): Intl$Collator;\n\n    compare (a: string, b: string): number;\n\n    resolvedOptions(): any;\n}\n\ntype CollatorOptions = {\n    localeMatcher?: 'lookup' | 'best fit',\n    usage?: 'sort' | 'search',\n    sensitivity?: 'base' | 'accent' | 'case' | 'variant',\n    ignorePunctuation?: boolean,\n    numeric?: boolean,\n    caseFirst?: 'upper' | 'lower' | 'false'\n}\n\nexport default class Collator {\n    locale: string | null;\n    sensitivity: 'base' | 'accent' | 'case' | 'variant';\n    collator: Intl$Collator;\n\n    constructor(caseSensitive: boolean, diacriticSensitive: boolean, locale: string | null) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [],\n            { sensitivity: this.sensitivity, usage: 'search' });\n    }\n\n    compare(lhs: string, rhs: string): number {\n        return this.collator.compare(lhs, rhs);\n    }\n\n    resolvedLocale(): string {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : [])\n            .resolvedOptions().locale;\n    }\n}\n","// @flow\n\nexport class FormattedSection {\n    text: string;\n    scale: number | null;\n    fontStack: string | null;\n\n    constructor(text: string, scale: number | null, fontStack: string | null) {\n        this.text = text;\n        this.scale = scale;\n        this.fontStack = fontStack;\n    }\n}\n\nexport default class Formatted {\n    sections: Array<FormattedSection>;\n\n    constructor(sections: Array<FormattedSection>) {\n        this.sections = sections;\n    }\n\n    static fromString(unformatted: string): Formatted {\n        return new Formatted([new FormattedSection(unformatted, null, null)]);\n    }\n\n    toString(): string {\n        return this.sections.map(section => section.text).join('');\n    }\n\n    serialize() {\n        const serialized = [\"format\"];\n        for (const section of this.sections) {\n            serialized.push(section.text);\n            const options = {};\n            if (section.fontStack) {\n                options[\"text-font\"] = [\"literal\", section.fontStack.split(',')];\n            }\n            if (section.scale) {\n                options[\"font-scale\"] = section.scale;\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n","// @flow\n\nimport assert from 'assert';\n\nimport Color from '../util/color';\nimport Collator from './types/collator';\nimport Formatted from './types/formatted';\nimport { NullType, NumberType, StringType, BooleanType, ColorType, ObjectType, ValueType, CollatorType, FormattedType, array } from './types';\n\nimport type { Type } from './types';\n\nexport function validateRGBA(r: mixed, g: mixed, b: mixed, a?: mixed): ?string {\n    if (!(\n        typeof r === 'number' && r >= 0 && r <= 255 &&\n        typeof g === 'number' && g >= 0 && g <= 255 &&\n        typeof b === 'number' && b >= 0 && b <= 255\n    )) {\n        const value = typeof a === 'number' ? [r, g, b, a] : [r, g, b];\n        return `Invalid rgba value [${value.join(', ')}]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n\n    if (!(\n        typeof a === 'undefined' || (typeof a === 'number' && a >= 0 && a <= 1)\n    )) {\n        return `Invalid rgba value [${[r, g, b, a].join(', ')}]: 'a' must be between 0 and 1.`;\n    }\n\n    return null;\n}\n\nexport type Value = null | string | boolean | number | Color | Collator | Formatted | $ReadOnlyArray<Value> | { +[string]: Value }\n\nexport function isValue(mixed: mixed): boolean {\n    if (mixed === null) {\n        return true;\n    } else if (typeof mixed === 'string') {\n        return true;\n    } else if (typeof mixed === 'boolean') {\n        return true;\n    } else if (typeof mixed === 'number') {\n        return true;\n    } else if (mixed instanceof Color) {\n        return true;\n    } else if (mixed instanceof Collator) {\n        return true;\n    } else if (mixed instanceof Formatted) {\n        return true;\n    } else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    } else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function typeOf(value: Value): Type {\n    if (value === null) {\n        return NullType;\n    } else if (typeof value === 'string') {\n        return StringType;\n    } else if (typeof value === 'boolean') {\n        return BooleanType;\n    } else if (typeof value === 'number') {\n        return NumberType;\n    } else if (value instanceof Color) {\n        return ColorType;\n    } else if (value instanceof Collator) {\n        return CollatorType;\n    } else if (value instanceof Formatted) {\n        return FormattedType;\n    } else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType: ?Type;\n\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            } else if (itemType === t) {\n                continue;\n            } else {\n                itemType = ValueType;\n                break;\n            }\n        }\n\n        return array(itemType || ValueType, length);\n    } else {\n        assert(typeof value === 'object');\n        return ObjectType;\n    }\n}\n\nexport function toString(value: Value) {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    } else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    } else if (value instanceof Color || value instanceof Formatted) {\n        return value.toString();\n    } else {\n        return JSON.stringify(value);\n    }\n}\n\nexport { Color, Collator };\n","// @flow\n\nimport assert from 'assert';\nimport { isValue, typeOf, Color } from '../values';\nimport Formatted from '../types/formatted';\n\nimport type { Type } from '../types';\nimport type { Value }  from '../values';\nimport type { Expression } from '../expression';\nimport type ParsingContext from '../parsing_context';\n\nclass Literal implements Expression {\n    type: Type;\n    value: Value;\n\n    constructor(type: Type, value: Value) {\n        this.type = type;\n        this.value = value;\n    }\n\n    static parse(args: Array<mixed>, context: ParsingContext) {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n\n        if (!isValue(args[1]))\n            return context.error(`invalid value`);\n\n        const value = (args[1]: any);\n        let type = typeOf(value);\n\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (\n            type.kind === 'array' &&\n            type.N === 0 &&\n            expected &&\n            expected.kind === 'array' &&\n            (typeof expected.N !== 'number' || expected.N === 0)\n        ) {\n            type = expected;\n        }\n\n        return new Literal(type, value);\n    }\n\n    evaluate() {\n        return this.value;\n    }\n\n    eachChild() {}\n\n    possibleOutputs() {\n        return [this.value];\n    }\n\n    serialize(): Array<mixed> {\n        if (this.type.kind === 'array' || this.type.kind === 'object') {\n            return [\"literal\", this.value];\n        } else if (this.value instanceof Color) {\n            // Constant-folding can generate Literal expressions that you\n            // couldn't actually generate with a \"literal\" expression,\n            // so we have to implement an equivalent serialization here\n            return [\"rgba\"].concat(this.value.toArray());\n        } else if (this.value instanceof Formatted) {\n            // Same as Color\n            return this.value.serialize();\n        } else {\n            assert(this.value === null ||\n                typeof this.value === 'string' ||\n                typeof this.value === 'number' ||\n                typeof this.value === 'boolean');\n            return (this.value: any);\n        }\n    }\n}\n\nexport default Literal;\n","// @flow\n\nclass RuntimeError {\n    name: string;\n    message: string;\n\n    constructor(message: string) {\n        this.name = 'ExpressionEvaluationError';\n        this.message = message;\n    }\n\n    toJSON() {\n        return this.message;\n    }\n}\n\nexport default RuntimeError;\n","// @flow\n\nimport assert from 'assert';\n\nimport {\n    ObjectType,\n    ValueType,\n    StringType,\n    NumberType,\n    BooleanType,\n    checkSubtype,\n    toString,\n    array\n} from '../types';\nimport RuntimeError from '../runtime_error';\nimport { typeOf } from '../values';\n\nimport type { Expression } from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type { Value } from '../values';\nimport type { Type } from '../types';\n\nconst types = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\n\nclass Assertion implements Expression {\n    type: Type;\n    args: Array<Expression>;\n\n    constructor(type: Type, args: Array<Expression>) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args: Array<mixed>, context: ParsingContext): ?Expression {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        let i = 1;\n        let type;\n\n        const name: string = (args[0]: any);\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                itemType = types[type];\n                i++;\n            } else {\n                itemType = ValueType;\n            }\n\n            let N;\n            if (args.length > 3) {\n                if (args[2] !== null &&\n                    (typeof args[2] !== 'number' ||\n                        args[2] < 0 ||\n                        args[2] !== Math.floor(args[2]))\n                ) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = args[2];\n                i++;\n            }\n\n            type = array(itemType, N);\n        } else {\n            assert(types[name], name);\n            type = types[name];\n        }\n\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Assertion(type, parsed);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            } else if (i === this.args.length - 1) {\n                throw new RuntimeError(`Expected value to be of type ${toString(this.type)}, but found ${toString(typeOf(value))} instead.`);\n            }\n        }\n\n        assert(false);\n        return null;\n    }\n\n    eachChild(fn: (Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    possibleOutputs(): Array<Value | void> {\n        return [].concat(...this.args.map((arg) => arg.possibleOutputs()));\n    }\n\n    serialize(): Array<mixed> {\n        const type = this.type;\n        const serialized = [type.kind];\n        if (type.kind === 'array') {\n            const itemType = type.itemType;\n            if (itemType.kind === 'string' ||\n                itemType.kind === 'number' ||\n                itemType.kind === 'boolean') {\n                serialized.push(itemType.kind);\n                const N = type.N;\n                if (typeof N === 'number' || this.args.length > 1) {\n                    serialized.push(N);\n                }\n            }\n        }\n        return serialized.concat(this.args.map(arg => arg.serialize()));\n    }\n}\n\nexport default Assertion;\n","// @flow\n\nimport { NumberType, ValueType, FormattedType, array, StringType } from '../types';\nimport Formatted, { FormattedSection } from '../types/formatted';\nimport { toString } from '../values';\n\nimport type { Expression } from '../expression';\nimport type EvaluationContext from '../evaluation_context';\nimport type ParsingContext from '../parsing_context';\nimport type { Type } from '../types';\n\ntype FormattedSectionExpression = {\n    text: Expression,\n    scale: Expression | null;\n    font: Expression | null;\n}\n\nexport default class FormatExpression implements Expression {\n    type: Type;\n    sections: Array<FormattedSectionExpression>;\n\n    constructor(sections: Array<FormattedSectionExpression>) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n\n    static parse(args: Array<mixed>, context: ParsingContext): ?Expression {\n        if (args.length < 3) {\n            return context.error(`Expected at least two arguments.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        const sections: Array<FormattedSectionExpression> = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const text = context.parse(args[i], 1, ValueType);\n            if (!text) return null;\n            const kind = text.type.kind;\n            if (kind !== 'string' && kind !== 'value' && kind !== 'null')\n                return context.error(`Formatted text type must be 'string', 'value', or 'null'.`);\n\n            const options = (args[i + 1]: any);\n            if (typeof options !== \"object\" || Array.isArray(options))\n                return context.error(`Format options argument must be an object.`);\n\n            let scale = null;\n            if (options['font-scale']) {\n                scale = context.parse(options['font-scale'], 1, NumberType);\n                if (!scale) return null;\n            }\n\n            let font = null;\n            if (options['text-font']) {\n                font = context.parse(options['text-font'], 1, array(StringType));\n                if (!font) return null;\n            }\n            sections.push({text, scale, font});\n        }\n\n        return new FormatExpression(sections);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        return new Formatted(\n            this.sections.map(section =>\n                new FormattedSection(\n                    toString(section.text.evaluate(ctx)),\n                    section.scale ? section.scale.evaluate(ctx) : null,\n                    section.font ? section.font.evaluate(ctx).join(',') : null\n                )\n            )\n        );\n    }\n\n    eachChild(fn: (Expression) => void) {\n        for (const section of this.sections) {\n            fn(section.text);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n        }\n    }\n\n    possibleOutputs() {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return [undefined];\n    }\n\n    serialize() {\n        const serialized = [\"format\"];\n        for (const section of this.sections) {\n            serialized.push(section.text.serialize());\n            const options = {};\n            if (section.scale) {\n                options['font-scale'] = section.scale.serialize();\n            }\n            if (section.font) {\n                options['text-font'] = section.font.serialize();\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n","// @flow\n\nimport assert from 'assert';\n\nimport {BooleanType, ColorType, NumberType, StringType, ValueType} from '../types';\nimport {Color, toString as valueToString, validateRGBA} from '../values';\nimport RuntimeError from '../runtime_error';\nimport Formatted from '../types/formatted';\nimport FormatExpression from '../definitions/format';\n\nimport type { Expression } from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type { Value } from '../values';\nimport type { Type } from '../types';\n\nconst types = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion implements Expression {\n    type: Type;\n    args: Array<Expression>;\n\n    constructor(type: Type, args: Array<Expression>) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args: Array<mixed>, context: ParsingContext): ?Expression {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        const name: string = (args[0]: any);\n        assert(types[name], name);\n\n        if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const type = types[name];\n\n        const parsed = [];\n        for (let i = 1; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Coercion(type, parsed);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        if (this.type.kind === 'boolean') {\n            return Boolean(this.args[0].evaluate(ctx));\n        } else if (this.type.kind === 'color') {\n            let input;\n            let error;\n            for (const arg of this.args) {\n                input = arg.evaluate(ctx);\n                error = null;\n                if (input instanceof Color) {\n                    return input;\n                } else if (typeof input === 'string') {\n                    const c = ctx.parseColor(input);\n                    if (c) return c;\n                } else if (Array.isArray(input)) {\n                    if (input.length < 3 || input.length > 4) {\n                        error = `Invalid rbga value ${JSON.stringify(input)}: expected an array containing either three or four numeric values.`;\n                    } else {\n                        error = validateRGBA(input[0], input[1], input[2], input[3]);\n                    }\n                    if (!error) {\n                        return new Color((input[0]: any) / 255, (input[1]: any) / 255, (input[2]: any) / 255, (input[3]: any));\n                    }\n                }\n            }\n            throw new RuntimeError(error || `Could not parse color from value '${typeof input === 'string' ? input : String(JSON.stringify(input))}'`);\n        } else if (this.type.kind === 'number') {\n            let value = null;\n            for (const arg of this.args) {\n                value = arg.evaluate(ctx);\n                if (value === null) return 0;\n                const num = Number(value);\n                if (isNaN(num)) continue;\n                return num;\n            }\n            throw new RuntimeError(`Could not convert ${JSON.stringify(value)} to number.`);\n        } else if (this.type.kind === 'formatted') {\n            // There is no explicit 'to-formatted' but this coercion can be implicitly\n            // created by properties that expect the 'formatted' type.\n            return Formatted.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else {\n            return valueToString(this.args[0].evaluate(ctx));\n        }\n    }\n\n    eachChild(fn: (Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    possibleOutputs(): Array<Value | void> {\n        return [].concat(...this.args.map((arg) => arg.possibleOutputs()));\n    }\n\n    serialize() {\n        if (this.type.kind === 'formatted') {\n            return new FormatExpression([{text: this.args[0], scale: null, font: null}]).serialize();\n        }\n        const serialized = [`to-${this.type.kind}`];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coercion;\n","// @flow\n\nimport { Color } from './values';\n\nimport type { GlobalProperties, Feature, FeatureState } from './index';\n\nconst geometryTypes = ['Unknown', 'Point', 'LineString', 'Polygon'];\n\nclass EvaluationContext {\n    globals: GlobalProperties;\n    feature: ?Feature;\n    featureState: ?FeatureState;\n\n    _parseColorCache: {[string]: ?Color};\n\n    constructor() {\n        this.globals = (null: any);\n        this.feature = null;\n        this.featureState = null;\n        this._parseColorCache = {};\n    }\n\n    id() {\n        return this.feature && 'id' in this.feature ? this.feature.id : null;\n    }\n\n    geometryType() {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n\n    properties() {\n        return this.feature && this.feature.properties || {};\n    }\n\n    parseColor(input: string): ?Color {\n        let cached = this._parseColorCache[input];\n        if (!cached) {\n            cached = this._parseColorCache[input] = Color.parse(input);\n        }\n        return cached;\n    }\n}\n\nexport default EvaluationContext;\n","// @flow\n\nimport { toString } from './types';\n\nimport ParsingContext from './parsing_context';\nimport EvaluationContext from './evaluation_context';\nimport assert from 'assert';\n\nimport type { Expression, ExpressionRegistry } from './expression';\nimport type { Type } from './types';\nimport type { Value } from './values';\n\nexport type Varargs = {| type: Type |};\ntype Signature = Array<Type> | Varargs;\ntype Evaluate = (EvaluationContext, Array<Expression>) => Value;\ntype Definition = [Type, Signature, Evaluate] |\n    {|type: Type, overloads: Array<[Signature, Evaluate]>|};\n\nclass CompoundExpression implements Expression {\n    name: string;\n    type: Type;\n    _evaluate: Evaluate;\n    args: Array<Expression>;\n\n    static definitions: { [string]: Definition };\n\n    constructor(name: string, type: Type, evaluate: Evaluate, args: Array<Expression>) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        return this._evaluate(ctx, this.args);\n    }\n\n    eachChild(fn: (Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    possibleOutputs() {\n        return [undefined];\n    }\n\n    serialize(): Array<mixed> {\n        return [this.name].concat(this.args.map(arg => arg.serialize()));\n    }\n\n    static parse(args: Array<mixed>, context: ParsingContext): ?Expression {\n        const op: string = (args[0]: any);\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ?\n            definition[0] : definition.type;\n\n        const availableOverloads = Array.isArray(definition) ?\n            [[definition[1], definition[2]]] :\n            definition.overloads;\n\n        const overloads = availableOverloads.filter(([signature]) => (\n            !Array.isArray(signature) || // varags\n            signature.length === args.length - 1 // correct param count\n        ));\n\n        let signatureContext: ParsingContext = (null: any);\n\n        for (const [params, evaluate] of overloads) {\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext(context.registry, context.path, null, context.scope);\n\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs: Array<Expression> = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ?\n                    params[i - 1] :\n                    params.type;\n\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${params.length} arguments, but found ${parsedArgs.length} instead.`);\n                    continue;\n                }\n            }\n\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate, parsedArgs);\n            }\n        }\n\n        assert(!signatureContext || signatureContext.errors.length > 0);\n\n        if (overloads.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        } else {\n            const expected = overloads.length ? overloads : availableOverloads;\n            const signatures = expected\n                .map(([params]) => stringifySignature(params))\n                .join(' | ');\n\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed) return null;\n                actualTypes.push(toString(parsed.type));\n            }\n            context.error(`Expected arguments of type ${signatures}, but found (${actualTypes.join(', ')}) instead.`);\n        }\n\n        return null;\n    }\n\n    static register(\n        registry: ExpressionRegistry,\n        definitions: { [string]: Definition }\n    ) {\n        assert(!CompoundExpression.definitions);\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\n\nfunction stringifySignature(signature: Signature): string {\n    if (Array.isArray(signature)) {\n        return `(${signature.map(toString).join(', ')})`;\n    } else {\n        return `(${toString(signature.type)}...)`;\n    }\n}\n\nexport default CompoundExpression;\n","// @flow\n\nimport { StringType, BooleanType, CollatorType } from '../types';\nimport Collator from '../types/collator';\n\nimport type { Expression } from '../expression';\nimport type EvaluationContext from '../evaluation_context';\nimport type ParsingContext from '../parsing_context';\nimport type { Type } from '../types';\n\nexport default class CollatorExpression implements Expression {\n    type: Type;\n    caseSensitive: Expression;\n    diacriticSensitive: Expression;\n    locale: Expression | null;\n\n    constructor(caseSensitive: Expression, diacriticSensitive: Expression, locale: Expression | null) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n\n    static parse(args: Array<mixed>, context: ParsingContext): ?Expression {\n        if (args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const options = (args[1]: any);\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`Collator options argument must be an object.`);\n\n        const caseSensitive = context.parse(\n            options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive) return null;\n\n        const diacriticSensitive = context.parse(\n            options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive) return null;\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n\n    eachChild(fn: (Expression) => void) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n\n    possibleOutputs() {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possibleOutputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possibleOutputs anyway, so we can get away with leaving this undefined for now.\n        return [undefined];\n    }\n\n    serialize() {\n        const options = {};\n        options['case-sensitive'] = this.caseSensitive.serialize();\n        options['diacritic-sensitive'] = this.diacriticSensitive.serialize();\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        return [\"collator\", options];\n    }\n}\n","// @flow\n\nimport CompoundExpression from './compound_expression';\n\nimport type { Expression } from './expression.js';\n\nfunction isFeatureConstant(e: Expression) {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'feature-state') {\n            return false;\n        } else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        } else if (\n            e.name === 'properties' ||\n            e.name === 'geometry-type' ||\n            e.name === 'id'\n        ) {\n            return false;\n        } else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isStateConstant(e: Expression) {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isGlobalPropertyConstant(e: Expression, properties: Array<string>) {\n    if (e instanceof CompoundExpression && properties.indexOf(e.name) >= 0) { return false; }\n    let result = true;\n    e.eachChild((arg) => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) { result = false; }\n    });\n    return result;\n}\n\nexport { isFeatureConstant, isGlobalPropertyConstant, isStateConstant };\n","// @flow\n\nimport type { Type } from '../types';\nimport type { Expression } from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext  from '../evaluation_context';\n\nclass Var implements Expression {\n    type: Type;\n    name: string;\n    boundExpression: Expression;\n\n    constructor(name: string, boundExpression: Expression) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n\n    static parse(args: Array<mixed>, context: ParsingContext) {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error(`'var' expression requires exactly one string literal argument.`);\n\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${name}\". Make sure \"${name}\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n\n        return new Var(name, context.scope.get(name));\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        return this.boundExpression.evaluate(ctx);\n    }\n\n    eachChild() {}\n\n    possibleOutputs() {\n        return [undefined];\n    }\n\n    serialize() {\n        return [\"var\", this.name];\n    }\n}\n\nexport default Var;\n","// @flow\n\nimport Scope from './scope';\nimport { checkSubtype } from './types';\nimport ParsingError from './parsing_error';\nimport Literal from './definitions/literal';\nimport Assertion from './definitions/assertion';\nimport Coercion from './definitions/coercion';\nimport EvaluationContext from './evaluation_context';\nimport CompoundExpression from './compound_expression';\nimport CollatorExpression from './definitions/collator';\nimport {isGlobalPropertyConstant, isFeatureConstant} from './is_constant';\nimport Var from './definitions/var';\n\n\nimport type {Expression, ExpressionRegistry} from './expression';\nimport type {Type} from './types';\n\n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n    registry: ExpressionRegistry;\n    path: Array<number>;\n    key: string;\n    scope: Scope;\n    errors: Array<ParsingError>;\n\n    // The expected type of this expression. Provided only to allow Expression\n    // implementations to infer argument types: Expression#parse() need not\n    // check that the output type of the parsed expression matches\n    // `expectedType`.\n    expectedType: ?Type;\n\n    constructor(\n        registry: ExpressionRegistry,\n        path: Array<number> = [],\n        expectedType: ?Type,\n        scope: Scope = new Scope(),\n        errors: Array<ParsingError> = []\n    ) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${part}]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n    }\n\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(\n        expr: mixed,\n        index?: number,\n        expectedType?: ?Type,\n        bindings?: Array<[string, Expression]>,\n        options: {typeAnnotation?: 'assert' | 'coerce' | 'omit'} = {}\n    ): ?Expression {\n        if (index) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n\n    _parse(expr: mixed, options: {typeAnnotation?: 'assert' | 'coerce' | 'omit'}): ?Expression {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = ['literal', expr];\n        }\n\n        function annotate(parsed, type, typeAnnotation: 'assert' | 'coerce' | 'omit') {\n            if (typeAnnotation === 'assert') {\n                return new Assertion(type, [parsed]);\n            } else if (typeAnnotation === 'coerce') {\n                return new Coercion(type, [parsed]);\n            } else {\n                return parsed;\n            }\n        }\n\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error(`Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].`);\n            }\n\n            const op = expr[0];\n            if (typeof op !== 'string') {\n                this.error(`Expression name must be a string, but found ${typeof op} instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n                return null;\n            }\n\n            const Expr = this.registry[op];\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed) return null;\n\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    } else if ((expected.kind === 'color' || expected.kind === 'formatted') && (actual.kind === 'value' || actual.kind === 'string')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    } else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result.\n                if (!(parsed instanceof Literal) && isConstant(parsed)) {\n                    const ec = new EvaluationContext();\n                    try {\n                        parsed = new Literal(parsed.type, parsed.evaluate(ec));\n                    } catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n\n                return parsed;\n            }\n\n            return this.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        } else if (typeof expr === 'undefined') {\n            return this.error(`'undefined' value invalid. Use null instead.`);\n        } else if (typeof expr === 'object') {\n            return this.error(`Bare objects invalid. Use [\"literal\", {...}] instead.`);\n        } else {\n            return this.error(`Expected an array, but found ${typeof expr} instead.`);\n        }\n    }\n\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index: number, expectedType?: ?Type, bindings?: Array<[string, Expression]>) {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(\n            this.registry,\n            path,\n            expectedType || null,\n            scope,\n            this.errors\n        );\n    }\n\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error: string, ...keys: Array<number>) {\n        const key = `${this.key}${keys.map(k => `[${k}]`).join('')}`;\n        this.errors.push(new ParsingError(key, error));\n    }\n\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     */\n    checkSubtype(expected: Type, t: Type): ?string {\n        const error = checkSubtype(expected, t);\n        if (error) this.error(error);\n        return error;\n    }\n}\n\nexport default ParsingContext;\n\nfunction isConstant(expression: Expression) {\n    if (expression instanceof Var) {\n        return isConstant(expression.boundExpression);\n    } else if (expression instanceof CompoundExpression && expression.name === 'error') {\n        return false;\n    } else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    }\n\n    const isTypeAnnotation = expression instanceof Coercion ||\n        expression instanceof Assertion;\n\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isConstant(child);\n        } else {\n            childrenConstant = childrenConstant && child instanceof Literal;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n\n    return isFeatureConstant(expression) &&\n        isGlobalPropertyConstant(expression, ['zoom', 'heatmap-density', 'line-progress', 'accumulated', 'is-supported-script']);\n}\n","// @flow\n\nimport RuntimeError from './runtime_error';\n\nimport type { Expression } from './expression';\n\nexport type Stops = Array<[number, Expression]>;\n\n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nexport function findStopLessThanOrEqualTo(stops: Array<number>, input: number) {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) { // Search complete\n                return currentIndex;\n            }\n\n            lowerIndex = currentIndex + 1;\n        } else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        } else {\n            throw new RuntimeError('Input is not a number.');\n        }\n    }\n\n    return 0;\n}\n","// @flow\n\nimport { NumberType } from '../types';\n\nimport { findStopLessThanOrEqualTo } from '../stops';\n\nimport type { Stops } from '../stops';\nimport type { Expression } from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type { Value } from '../values';\nimport type { Type } from '../types';\n\nclass Step implements Expression {\n    type: Type;\n\n    input: Expression;\n    labels: Array<number>;\n    outputs: Array<Expression>;\n\n    constructor(type: Type, input: Expression, stops: Stops) {\n        this.type = type;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static parse(args: Array<mixed>, context: ParsingContext) {\n        let [ , input, ...rest] = args;\n\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        input = context.parse(input, 1, NumberType);\n        if (!input) return null;\n\n        const stops: Stops = [];\n\n        let outputType: Type = (null: any);\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        rest.unshift(-Infinity);\n\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n\n            const labelKey = i + 1;\n            const valueKey = i + 2;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        return new Step(outputType, input, stops);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx): any): number);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n\n    eachChild(fn: (Expression) => void) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    possibleOutputs(): Array<Value | void> {\n        return [].concat(...this.outputs.map((output) => output.possibleOutputs()));\n    }\n\n    serialize() {\n        const serialized = [\"step\", this.input.serialize()];\n        for (let i = 0; i < this.labels.length; i++) {\n            if (i > 0) {\n                serialized.push(this.labels[i]);\n            }\n            serialized.push(this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\n\nexport default Step;\n","/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * Ported from Webkit\n * http://svn.webkit.org/repository/webkit/trunk/Source/WebCore/platform/graphics/UnitBezier.h\n */\n\nmodule.exports = UnitBezier;\n\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\n    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n    this.cx = 3.0 * p1x;\n    this.bx = 3.0 * (p2x - p1x) - this.cx;\n    this.ax = 1.0 - this.cx - this.bx;\n\n    this.cy = 3.0 * p1y;\n    this.by = 3.0 * (p2y - p1y) - this.cy;\n    this.ay = 1.0 - this.cy - this.by;\n\n    this.p1x = p1x;\n    this.p1y = p2y;\n    this.p2x = p2x;\n    this.p2y = p2y;\n}\n\nUnitBezier.prototype.sampleCurveX = function(t) {\n    // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n    return ((this.ax * t + this.bx) * t + this.cx) * t;\n};\n\nUnitBezier.prototype.sampleCurveY = function(t) {\n    return ((this.ay * t + this.by) * t + this.cy) * t;\n};\n\nUnitBezier.prototype.sampleCurveDerivativeX = function(t) {\n    return (3.0 * this.ax * t + 2.0 * this.bx) * t + this.cx;\n};\n\nUnitBezier.prototype.solveCurveX = function(x, epsilon) {\n    if (typeof epsilon === 'undefined') epsilon = 1e-6;\n\n    var t0, t1, t2, x2, i;\n\n    // First try a few iterations of Newton's method -- normally very fast.\n    for (t2 = x, i = 0; i < 8; i++) {\n\n        x2 = this.sampleCurveX(t2) - x;\n        if (Math.abs(x2) < epsilon) return t2;\n\n        var d2 = this.sampleCurveDerivativeX(t2);\n        if (Math.abs(d2) < 1e-6) break;\n\n        t2 = t2 - x2 / d2;\n    }\n\n    // Fall back to the bisection method for reliability.\n    t0 = 0.0;\n    t1 = 1.0;\n    t2 = x;\n\n    if (t2 < t0) return t0;\n    if (t2 > t1) return t1;\n\n    while (t0 < t1) {\n\n        x2 = this.sampleCurveX(t2);\n        if (Math.abs(x2 - x) < epsilon) return t2;\n\n        if (x > x2) {\n            t0 = t2;\n        } else {\n            t1 = t2;\n        }\n\n        t2 = (t1 - t0) * 0.5 + t0;\n    }\n\n    // Failure.\n    return t2;\n};\n\nUnitBezier.prototype.solve = function(x, epsilon) {\n    return this.sampleCurveY(this.solveCurveX(x, epsilon));\n};\n","// @flow\n\nimport Color from './color';\n\nexport function number(a: number, b: number, t: number) {\n    return (a * (1 - t)) + (b * t);\n}\n\nexport function color(from: Color, to: Color, t: number) {\n    return new Color(\n        number(from.r, to.r, t),\n        number(from.g, to.g, t),\n        number(from.b, to.b, t),\n        number(from.a, to.a, t)\n    );\n}\n\nexport function array(from: Array<number>, to: Array<number>, t: number): Array<number> {\n    return from.map((d, i) => {\n        return number(d, to[i], t);\n    });\n}\n","// @flow\n\nimport Color from './color';\n\nimport {number as interpolateNumber} from './interpolate';\n\ntype LABColor = {\n    l: number,\n    a: number,\n    b: number,\n    alpha: number\n};\n\ntype HCLColor = {\n    h: number,\n    c: number,\n    l: number,\n    alpha: number\n};\n\n// Constants\nconst Xn = 0.950470, // D65 standard referent\n    Yn = 1,\n    Zn = 1.088830,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1,\n    deg2rad = Math.PI / 180,\n    rad2deg = 180 / Math.PI;\n\n// Utilities\nfunction xyz2lab(t) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n    x /= 255;\n    return x <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\n// LAB\nfunction rgbToLab(rgbColor: Color): LABColor {\n    const b = rgb2xyz(rgbColor.r),\n        a = rgb2xyz(rgbColor.g),\n        l = rgb2xyz(rgbColor.b),\n        x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n        y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n        z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\n    return {\n        l: 116 * y - 16,\n        a: 500 * (x - y),\n        b: 200 * (y - z),\n        alpha: rgbColor.a\n    };\n}\n\nfunction labToRgb(labColor: LABColor): Color {\n    let y = (labColor.l + 16) / 116,\n        x = isNaN(labColor.a) ? y : y + labColor.a / 500,\n        z = isNaN(labColor.b) ? y : y - labColor.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Color(\n        xyz2rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n        xyz2rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n        labColor.alpha\n    );\n}\n\nfunction interpolateLab(from: LABColor, to: LABColor, t: number) {\n    return {\n        l: interpolateNumber(from.l, to.l, t),\n        a: interpolateNumber(from.a, to.a, t),\n        b: interpolateNumber(from.b, to.b, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\n// HCL\nfunction rgbToHcl(rgbColor: Color): HCLColor {\n    const {l, a, b} = rgbToLab(rgbColor);\n    const h = Math.atan2(b, a) * rad2deg;\n    return {\n        h: h < 0 ? h + 360 : h,\n        c: Math.sqrt(a * a + b * b),\n        l,\n        alpha: rgbColor.a\n    };\n}\n\nfunction hclToRgb(hclColor: HCLColor): Color {\n    const h = hclColor.h * deg2rad,\n        c = hclColor.c,\n        l = hclColor.l;\n    return labToRgb({\n        l,\n        a: Math.cos(h) * c,\n        b: Math.sin(h) * c,\n        alpha: hclColor.alpha\n    });\n}\n\nfunction interpolateHue(a: number, b: number, t: number) {\n    const d = b - a;\n    return a + t * (d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d);\n}\n\nfunction interpolateHcl(from: HCLColor, to: HCLColor, t: number) {\n    return {\n        h: interpolateHue(from.h, to.h, t),\n        c: interpolateNumber(from.c, to.c, t),\n        l: interpolateNumber(from.l, to.l, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\nexport const lab = {\n    forward: rgbToLab,\n    reverse: labToRgb,\n    interpolate: interpolateLab\n};\n\nexport const hcl = {\n    forward: rgbToHcl,\n    reverse: hclToRgb,\n    interpolate: interpolateHcl\n};\n","// @flow\n\nimport UnitBezier from '@mapbox/unitbezier';\n\nimport * as interpolate from '../../util/interpolate';\nimport { toString, NumberType, ColorType } from '../types';\nimport { findStopLessThanOrEqualTo } from '../stops';\nimport { hcl, lab } from '../../util/color_spaces';\n\nimport type { Stops } from '../stops';\nimport type { Expression } from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type { Value } from '../values';\nimport type { Type } from '../types';\n\nexport type InterpolationType =\n    { name: 'linear' } |\n    { name: 'exponential', base: number } |\n    { name: 'cubic-bezier', controlPoints: [number, number, number, number] };\n\nclass Interpolate implements Expression {\n    type: Type;\n\n    operator: 'interpolate' | 'interpolate-hcl' | 'interpolate-lab';\n    interpolation: InterpolationType;\n    input: Expression;\n    labels: Array<number>;\n    outputs: Array<Expression>;\n\n    constructor(type: Type, operator: 'interpolate' | 'interpolate-hcl' | 'interpolate-lab', interpolation: InterpolationType, input: Expression, stops: Stops) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static interpolationFactor(interpolation: InterpolationType, input: number, lower: number, upper: number) {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        } else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        } else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n\n    static parse(args: Array<mixed>, context: ParsingContext) {\n        let [operator, interpolation, input, ...rest] = args;\n\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error(`Expected an interpolation type expression.`, 1);\n        }\n\n        if (interpolation[0] === 'linear') {\n            interpolation = { name: 'linear' };\n        } else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error(`Exponential interpolation requires a numeric base.`, 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        } else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (\n                controlPoints.length !== 4 ||\n                controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)\n            ) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: (controlPoints: any)\n            };\n        } else {\n            return context.error(`Unknown interpolation type ${String(interpolation[0])}`, 1, 0);\n        }\n\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        input = context.parse(input, 2, NumberType);\n        if (!input) return null;\n\n        const stops: Stops = [];\n\n        let outputType: Type = (null: any);\n        if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n            outputType = ColorType;\n        } else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        if (outputType.kind !== 'number' &&\n            outputType.kind !== 'color' &&\n            !(\n                outputType.kind === 'array' &&\n                outputType.itemType.kind === 'number' &&\n                typeof outputType.N === 'number'\n            )\n        ) {\n            return context.error(`Type ${toString(outputType)} is not interpolatable.`);\n        }\n\n        return new Interpolate(outputType, (operator: any), interpolation, input, stops);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx): any): number);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n\n        if (this.operator === 'interpolate') {\n            return (interpolate[this.type.kind.toLowerCase()]: any)(outputLower, outputUpper, t); // eslint-disable-line import/namespace\n        } else if (this.operator === 'interpolate-hcl') {\n            return hcl.reverse(hcl.interpolate(hcl.forward(outputLower), hcl.forward(outputUpper), t));\n        } else {\n            return lab.reverse(lab.interpolate(lab.forward(outputLower), lab.forward(outputUpper), t));\n        }\n    }\n\n    eachChild(fn: (Expression) => void) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    possibleOutputs(): Array<Value | void> {\n        return [].concat(...this.outputs.map((output) => output.possibleOutputs()));\n    }\n\n    serialize(): Array<mixed> {\n        let interpolation;\n        if (this.interpolation.name === 'linear') {\n            interpolation = [\"linear\"];\n        } else if (this.interpolation.name === 'exponential') {\n            if  (this.interpolation.base === 1) {\n                interpolation = [\"linear\"];\n            } else {\n                interpolation = [\"exponential\", this.interpolation.base];\n            }\n        } else {\n            interpolation = [\"cubic-bezier\" ].concat(this.interpolation.controlPoints);\n        }\n\n        const serialized = [this.operator, interpolation, this.input.serialize()];\n\n        for (let i = 0; i < this.labels.length; i++) {\n            serialized.push(\n                this.labels[i],\n                this.outputs[i].serialize()\n            );\n        }\n        return serialized;\n    }\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n\nexport default Interpolate;\n","// @flow\n\nimport assert from 'assert';\n\nimport { checkSubtype, ValueType } from '../types';\n\nimport type { Expression } from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type { Value } from '../values';\nimport type { Type } from '../types';\n\nclass Coalesce implements Expression {\n    type: Type;\n    args: Array<Expression>;\n\n    constructor(type: Type, args: Array<Expression>) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args: Array<mixed>, context: ParsingContext) {\n        if (args.length < 2) {\n            return context.error(\"Expectected at least one argument.\");\n        }\n        let outputType: Type = (null: any);\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, {typeAnnotation: 'omit'});\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        assert(outputType);\n\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType &&\n            parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n\n        return needsAnnotation ?\n            new Coalesce(ValueType, parsedArgs) :\n            new Coalesce((outputType: any), parsedArgs);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        let result = null;\n        for (const arg of this.args) {\n            result = arg.evaluate(ctx);\n            if (result !== null) break;\n        }\n        return result;\n    }\n\n    eachChild(fn: (Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    possibleOutputs(): Array<Value | void> {\n        return [].concat(...this.args.map((arg) => arg.possibleOutputs()));\n    }\n\n    serialize() {\n        const serialized = [\"coalesce\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coalesce;\n","// @flow\n\nimport type { Type } from '../types';\nimport type { Expression } from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext  from '../evaluation_context';\n\nclass Let implements Expression {\n    type: Type;\n    bindings: Array<[string, Expression]>;\n    result: Expression;\n\n    constructor(bindings: Array<[string, Expression]>, result: Expression) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        return this.result.evaluate(ctx);\n    }\n\n    eachChild(fn: (Expression) => void) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n\n    static parse(args: Array<mixed>, context: ParsingContext) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${args.length - 1} instead.`);\n\n        const bindings: Array<[string, Expression]> = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${typeof name} instead.`, i);\n            }\n\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error(`Variable names must contain only alphanumeric characters or '_'.`, i);\n            }\n\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value) return null;\n\n            bindings.push([name, value]);\n        }\n\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result) return null;\n\n        return new Let(bindings, result);\n    }\n\n    possibleOutputs() {\n        return this.result.possibleOutputs();\n    }\n\n    serialize() {\n        const serialized = [\"let\"];\n        for (const [name, expr] of this.bindings) {\n            serialized.push(name, expr.serialize());\n        }\n        serialized.push(this.result.serialize());\n        return serialized;\n    }\n}\n\nexport default Let;\n","// @flow\n\nimport { array, ValueType, NumberType } from '../types';\n\nimport RuntimeError from '../runtime_error';\n\nimport type { Expression } from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type { Type, ArrayType } from '../types';\nimport type { Value } from '../values';\n\nclass At implements Expression {\n    type: Type;\n    index: Expression;\n    input: Expression;\n\n    constructor(type: Type, index: Expression, input: Expression) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n\n    static parse(args: Array<mixed>, context: ParsingContext) {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array(context.expectedType || ValueType));\n\n        if (!index || !input) return null;\n\n        const t: ArrayType = (input.type: any);\n        return new At(t.itemType, index, input);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const index = ((this.index.evaluate(ctx): any): number);\n        const array = ((this.input.evaluate(ctx): any): Array<Value>);\n\n        if (index < 0) {\n            throw new RuntimeError(`Array index out of bounds: ${index} < 0.`);\n        }\n\n        if (index >= array.length) {\n            throw new RuntimeError(`Array index out of bounds: ${index} > ${array.length - 1}.`);\n        }\n\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError(`Array index must be an integer, but found ${index} instead.`);\n        }\n\n        return array[index];\n    }\n\n    eachChild(fn: (Expression) => void) {\n        fn(this.index);\n        fn(this.input);\n    }\n\n    possibleOutputs() {\n        return [undefined];\n    }\n\n    serialize() {\n        return [\"at\", this.index.serialize(), this.input.serialize()];\n    }\n}\n\nexport default At;\n","// @flow\n\nimport assert from 'assert';\n\nimport { typeOf } from '../values';\nimport { ValueType, type Type } from '../types';\n\nimport type { Expression } from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type { Value } from '../values';\n\n// Map input label values to output expression index\ntype Cases = {[number | string]: number};\n\nclass Match implements Expression {\n    type: Type;\n    inputType: Type;\n\n    input: Expression;\n    cases: Cases;\n    outputs: Array<Expression>;\n    otherwise: Expression;\n\n    constructor(inputType: Type, outputType: Type, input: Expression, cases: Cases, outputs: Array<Expression>, otherwise: Expression) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args: Array<mixed>, context: ParsingContext) {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 1)\n            return context.error(`Expected an even number of arguments.`);\n\n        let inputType;\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error(`Branch labels must be numbers or strings.`);\n                } else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${Number.MAX_SAFE_INTEGER}.`);\n\n                } else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error(`Numeric branch labels must be integer values.`);\n\n                } else if (!inputType) {\n                    inputType = typeOf(label);\n                } else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n\n                cases[String(label)] = outputs.length;\n            }\n\n            const result = context.parse(value, i, outputType);\n            if (!result) return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input) return null;\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(inputType && outputType);\n\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype((inputType: any), input.type)) {\n            return null;\n        }\n\n        return new Match((inputType: any), (outputType: any), input, cases, outputs, otherwise);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const input = (this.input.evaluate(ctx): any);\n        const output = (typeOf(input) === this.inputType && this.outputs[this.cases[input]]) || this.otherwise;\n        return output.evaluate(ctx);\n    }\n\n    eachChild(fn: (Expression) => void) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n\n    possibleOutputs(): Array<Value | void> {\n        return []\n            .concat(...this.outputs.map((out) => out.possibleOutputs()))\n            .concat(this.otherwise.possibleOutputs());\n    }\n\n    serialize(): Array<mixed> {\n        const serialized = [\"match\", this.input.serialize()];\n\n        // Sort so serialization has an arbitrary defined order, even though\n        // branch order doesn't affect evaluation\n        const sortedLabels = Object.keys(this.cases).sort();\n\n        // Group branches by unique match expression to support condensed\n        // serializations of the form [case1, case2, ...] -> matchExpression\n        const groupedByOutput: Array<[number, Array<number | string>]> = [];\n        const outputLookup: {[index: number]: number} = {}; // lookup index into groupedByOutput for a given output expression\n        for (const label of sortedLabels) {\n            const outputIndex = outputLookup[this.cases[label]];\n            if (outputIndex === undefined) {\n                // First time seeing this output, add it to the end of the grouped list\n                outputLookup[this.cases[label]] = groupedByOutput.length;\n                groupedByOutput.push([this.cases[label], [label]]);\n            } else {\n                // We've seen this expression before, add the label to that output's group\n                groupedByOutput[outputIndex][1].push(label);\n            }\n        }\n\n        const coerceLabel = (label) => this.inputType.kind === 'number' ? Number(label) : label;\n\n        for (const [outputIndex, labels] of groupedByOutput) {\n            if (labels.length === 1) {\n                // Only a single label matches this output expression\n                serialized.push(coerceLabel(labels[0]));\n            } else {\n                // Array of literal labels pointing to this output expression\n                serialized.push(labels.map(coerceLabel));\n            }\n            serialized.push(this.outputs[outputIndex].serialize());\n        }\n        serialized.push(this.otherwise.serialize());\n        return serialized;\n    }\n}\n\nexport default Match;\n","// @flow\n\nimport assert from 'assert';\n\nimport { BooleanType } from '../types';\n\nimport type { Expression } from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type { Value } from '../values';\nimport type { Type } from '../types';\n\ntype Branches = Array<[Expression, Expression]>;\n\nclass Case implements Expression {\n    type: Type;\n\n    branches: Branches;\n    otherwise: Expression;\n\n    constructor(type: Type, branches: Branches, otherwise: Expression) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args: Array<mixed>, context: ParsingContext) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 0)\n            return context.error(`Expected an odd number of arguments.`);\n\n        let outputType: ?Type;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test) return null;\n\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result) return null;\n\n            branches.push([test, result]);\n\n            outputType = outputType || result.type;\n        }\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(outputType);\n        return new Case((outputType: any), branches, otherwise);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n\n    eachChild(fn: (Expression) => void) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n\n    possibleOutputs(): Array<Value | void> {\n        return []\n            .concat(...this.branches.map(([_, out]) => out.possibleOutputs()))\n            .concat(this.otherwise.possibleOutputs());\n    }\n\n    serialize() {\n        const serialized = [\"case\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Case;\n","// @flow\n\nimport { toString, ValueType, BooleanType, CollatorType } from '../types';\nimport Assertion from './assertion';\nimport { typeOf } from '../values';\nimport RuntimeError from '../runtime_error';\n\nimport type { Expression } from '../expression';\nimport type EvaluationContext from '../evaluation_context';\nimport type ParsingContext from '../parsing_context';\nimport type { Type } from '../types';\n\ntype ComparisonOperator = '==' | '!=' | '<' | '>' | '<=' | '>=' ;\n\nfunction isComparableType(op: ComparisonOperator, type: Type) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' ||\n            type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'null' ||\n            type.kind === 'value';\n    } else {\n        // ordering operator\n        return type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'value';\n    }\n}\n\n\nfunction eq(ctx, a, b) { return a === b; }\nfunction neq(ctx, a, b) { return a !== b; }\nfunction lt(ctx, a, b) { return a < b; }\nfunction gt(ctx, a, b) { return a > b; }\nfunction lteq(ctx, a, b) { return a <= b; }\nfunction gteq(ctx, a, b) { return a >= b; }\n\nfunction eqCollate(ctx, a, b, c) { return c.compare(a, b) === 0; }\nfunction neqCollate(ctx, a, b, c) { return !eqCollate(ctx, a, b, c); }\nfunction ltCollate(ctx, a, b, c) { return c.compare(a, b) < 0; }\nfunction gtCollate(ctx, a, b, c) { return c.compare(a, b) > 0; }\nfunction lteqCollate(ctx, a, b, c) { return c.compare(a, b) <= 0; }\nfunction gteqCollate(ctx, a, b, c) { return c.compare(a, b) >= 0; }\n\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op: ComparisonOperator, compareBasic, compareWithCollator) {\n    const isOrderComparison = op !== '==' && op !== '!=';\n\n    return class Comparison implements Expression {\n        type: Type;\n        lhs: Expression;\n        rhs: Expression;\n        collator: ?Expression;\n        hasUntypedArgument: boolean;\n\n        constructor(lhs: Expression, rhs: Expression, collator: ?Expression) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n\n        static parse(args: Array<mixed>, context: ParsingContext): ?Expression {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error(`Expected two or three arguments.`);\n\n            const op: ComparisonOperator = (args[0]: any);\n\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs) return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${op}\" comparisons are not supported for type '${toString(lhs.type)}'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs) return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${op}\" comparisons are not supported for type '${toString(rhs.type)}'.`);\n            }\n\n            if (\n                lhs.type.kind !== rhs.type.kind &&\n                lhs.type.kind !== 'value' &&\n                rhs.type.kind !== 'value'\n            ) {\n                return context.error(`Cannot compare types '${toString(lhs.type)}' and '${toString(rhs.type)}'.`);\n            }\n\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion(rhs.type, [lhs]);\n                } else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion(lhs.type, [rhs]);\n                }\n            }\n\n            let collator = null;\n            if (args.length === 4) {\n                if (\n                    lhs.type.kind !== 'string' &&\n                    rhs.type.kind !== 'string' &&\n                    lhs.type.kind !== 'value' &&\n                    rhs.type.kind !== 'value'\n                ) {\n                    return context.error(`Cannot use collator to compare non-string types.`);\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator) return null;\n            }\n\n            return new Comparison(lhs, rhs, collator);\n        }\n\n        evaluate(ctx: EvaluationContext) {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError(`Expected arguments for \"${op}\" to be (string, string) or (number, number), but found (${lt.kind}, ${rt.kind}) instead.`);\n                }\n            }\n\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n\n            return this.collator ?\n                compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) :\n                compareBasic(ctx, lhs, rhs);\n        }\n\n        eachChild(fn: (Expression) => void) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n\n        possibleOutputs() {\n            return [true, false];\n        }\n\n        serialize() {\n            const serialized = [op];\n            this.eachChild(child => { serialized.push(child.serialize()); });\n            return serialized;\n        }\n    };\n}\n\nexport const Equals = makeComparison('==', eq, eqCollate);\nexport const NotEquals = makeComparison('!=', neq, neqCollate);\nexport const LessThan = makeComparison('<', lt, ltCollate);\nexport const GreaterThan = makeComparison('>', gt, gtCollate);\nexport const LessThanOrEqual = makeComparison('<=', lteq, lteqCollate);\nexport const GreaterThanOrEqual = makeComparison('>=', gteq, gteqCollate);\n","// @flow\n\nimport { StringType, NumberType } from '../types';\n\nimport type { Expression } from '../expression';\nimport type EvaluationContext from '../evaluation_context';\nimport type ParsingContext from '../parsing_context';\nimport type { Type } from '../types';\n\ndeclare var Intl: {\n    NumberFormat: Class<Intl$NumberFormat>\n};\n\ndeclare class Intl$NumberFormat {\n    constructor (\n        locales?: string | string[],\n        options?: NumberFormatOptions\n    ): Intl$NumberFormat;\n\n    static (\n        locales?: string | string[],\n        options?: NumberFormatOptions\n    ): Intl$NumberFormat;\n\n    format(a: number): string;\n\n    resolvedOptions(): any;\n}\n\ntype NumberFormatOptions = {\n    style?: 'decimal' | 'currency' | 'percent';\n    currency?: null | string;\n    minimumFractionDigits?: null | string;\n    maximumFractionDigits?: null | string;\n};\n\nexport default class NumberFormat implements Expression {\n    type: Type;\n    number: Expression;\n    locale: Expression | null;   // BCP 47 language tag\n    currency: Expression | null; // ISO 4217 currency code, required if style=currency\n    minFractionDigits: Expression | null; // Default 0\n    maxFractionDigits: Expression | null; // Default 3\n\n    constructor(number: Expression,\n                locale: Expression | null,\n                currency: Expression | null,\n                minFractionDigits: Expression | null,\n                maxFractionDigits: Expression | null) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n\n    static parse(args: Array<mixed>, context: ParsingContext): ?Expression {\n        if (args.length !== 3)\n            return context.error(`Expected two arguments.`);\n\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number) return null;\n\n        const options = (args[2]: any);\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`NumberFormat options argument must be an object.`);\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency) return null;\n        }\n\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits) return null;\n        }\n\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits) return null;\n        }\n\n        return new NumberFormat(number, locale, currency, minFractionDigits, maxFractionDigits);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [],\n            {\n                style: this.currency ? \"currency\" : \"decimal\",\n                currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n                minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n                maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined,\n            }).format(this.number.evaluate(ctx));\n    }\n\n    eachChild(fn: (Expression) => void) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n\n    possibleOutputs() {\n        return [undefined];\n    }\n\n    serialize() {\n        const options = {};\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        if (this.currency) {\n            options['currency'] = this.currency.serialize();\n        }\n        if (this.minFractionDigits) {\n            options['min-fraction-digits'] = this.minFractionDigits.serialize();\n        }\n        if (this.maxFractionDigits) {\n            options['max-fraction-digits'] = this.maxFractionDigits.serialize();\n        }\n        return [\"number-format\", this.number.serialize(), options];\n    }\n}\n","// @flow\n\nimport { NumberType, toString } from '../types';\n\nimport { typeOf } from '../values';\nimport RuntimeError from '../runtime_error';\n\nimport type { Expression } from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type { Type } from '../types';\n\nclass Length implements Expression {\n    type: Type;\n    input: Expression;\n\n    constructor(input: Expression) {\n        this.type = NumberType;\n        this.input = input;\n    }\n\n    static parse(args: Array<mixed>, context: ParsingContext) {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${args.length - 1} instead.`);\n\n        const input = context.parse(args[1], 1);\n        if (!input) return null;\n\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${toString(input.type)} instead.`);\n\n        return new Length(input);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            return input.length;\n        } else if (Array.isArray(input)) {\n            return input.length;\n        } else {\n            throw new RuntimeError(`Expected value to be of type string or array, but found ${toString(typeOf(input))} instead.`);\n        }\n    }\n\n    eachChild(fn: (Expression) => void) {\n        fn(this.input);\n    }\n\n    possibleOutputs() {\n        return [undefined];\n    }\n\n    serialize() {\n        const serialized = [\"length\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Length;\n","// @flow\n\nimport {\n    type Type,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    ObjectType,\n    ValueType,\n    ErrorType,\n    CollatorType,\n    array,\n    toString as typeToString\n} from '../types';\n\nimport { typeOf, Color, validateRGBA, toString as valueToString } from '../values';\nimport CompoundExpression from '../compound_expression';\nimport RuntimeError from '../runtime_error';\nimport Let from './let';\nimport Var from './var';\nimport Literal from './literal';\nimport Assertion from './assertion';\nimport Coercion from './coercion';\nimport At from './at';\nimport Match from './match';\nimport Case from './case';\nimport Step from './step';\nimport Interpolate from './interpolate';\nimport Coalesce from './coalesce';\nimport {\n    Equals,\n    NotEquals,\n    LessThan,\n    GreaterThan,\n    LessThanOrEqual,\n    GreaterThanOrEqual\n} from './comparison';\nimport CollatorExpression from './collator';\nimport NumberFormat from './number_format';\nimport FormatExpression from './format';\nimport Length from './length';\n\nimport type { Varargs } from '../compound_expression';\nimport type { ExpressionRegistry } from '../expression';\n\nconst expressions: ExpressionRegistry = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion,\n    'at': At,\n    'boolean': Assertion,\n    'case': Case,\n    'coalesce': Coalesce,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'interpolate': Interpolate,\n    'interpolate-hcl': Interpolate,\n    'interpolate-lab': Interpolate,\n    'length': Length,\n    'let': Let,\n    'literal': Literal,\n    'match': Match,\n    'number': Assertion,\n    'number-format': NumberFormat,\n    'object': Assertion,\n    'step': Step,\n    'string': Assertion,\n    'to-boolean': Coercion,\n    'to-color': Coercion,\n    'to-number': Coercion,\n    'to-string': Coercion,\n    'var': Var\n};\n\nfunction rgba(ctx, [r, g, b, a]) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error) throw new RuntimeError(error);\n    return new Color(r / 255 * alpha, g / 255 * alpha, b / 255 * alpha, alpha);\n}\n\nfunction has(key, obj) {\n    return key in obj;\n}\n\nfunction get(key, obj) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\n\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        const m = (i + j) >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\n\nfunction varargs(type: Type): Varargs {\n    return { type };\n}\n\nCompoundExpression.register(expressions, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => { throw new RuntimeError(v.evaluate(ctx)); }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => typeToString(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            return v.evaluate(ctx).toArray();\n        }\n    ],\n    'rgb': [\n        ColorType,\n        [NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [NumberType, NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        (ctx) => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        (ctx) => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        (ctx) => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.zoom\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.heatmapDensity || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.lineProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        (ctx) => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [NumberType, NumberType],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ], [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => ctx.properties()[(k: any).value] === (v: any).value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === (v: any).value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === (v: any).value\n    ],\n    'filter-<': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k: any).value];\n            const b = (v: any).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v: any).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k: any).value];\n            const b = (v: any).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v: any).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k: any).value];\n            const b = (v: any).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v: any).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k: any).value];\n            const b = (v: any).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v: any).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => (k: any).value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        (ctx) => ctx.id() !== null\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array(StringType)],\n        (ctx, [v]) => (v: any).value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array(ValueType)],\n        (ctx, [v]) => (v: any).value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is an array literal\n        (ctx, [k, v]) => (v: any).value.indexOf(ctx.properties()[(k: any).value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[(k: any).value], (v: any).value, 0, (v: any).value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => valueToString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ]\n});\n\nexport default expressions;\n","// @flow\n\n/**\n * A type used for returning and propagating errors. The first element of the union\n * represents success and contains a value, and the second represents an error and\n * contains an error value.\n * @private\n */\nexport type Result<T, E> =\n    | {| result: 'success', value: T |}\n    | {| result: 'error', value: E |};\n\nexport function success<T, E>(value: T): Result<T, E> {\n    return { result: 'success', value };\n}\n\nexport function error<T, E>(value: E): Result<T, E> {\n    return { result: 'error', value };\n}\n","// @flow\n\nimport type {StylePropertySpecification} from '../style-spec';\n\nexport function supportsPropertyExpression(spec: StylePropertySpecification): boolean {\n    return spec['property-type'] === 'data-driven' || spec['property-type'] === 'cross-faded-data-driven';\n}\n\nexport function supportsZoomExpression(spec: StylePropertySpecification): boolean {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\n\nexport function supportsInterpolation(spec: StylePropertySpecification): boolean {\n    return !!spec.expression && spec.expression.interpolated;\n}\n","\nexport default function getType(val) {\n    if (val instanceof Number) {\n        return 'number';\n    } else if (val instanceof String) {\n        return 'string';\n    } else if (val instanceof Boolean) {\n        return 'boolean';\n    } else if (Array.isArray(val)) {\n        return 'array';\n    } else if (val === null) {\n        return 'null';\n    } else {\n        return typeof val;\n    }\n}\n","\nimport * as colorSpaces from '../util/color_spaces';\nimport Color from '../util/color';\nimport extend from '../util/extend';\nimport getType from '../util/get_type';\nimport * as interpolate from '../util/interpolate';\nimport Interpolate from '../expression/definitions/interpolate';\nimport Formatted from '../expression/types/formatted';\nimport { supportsInterpolation } from '../util/properties';\nimport { findStopLessThanOrEqualTo } from '../expression/stops';\n\nexport function isFunction(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nfunction identityFunction(x) {\n    return x;\n}\n\nexport function createFunction(parameters, propertySpec) {\n    const isColor = propertySpec.type === 'color';\n    const zoomAndFeatureDependent = parameters.stops && typeof parameters.stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    const type = parameters.type || (supportsInterpolation(propertySpec) ? 'exponential' : 'interval');\n\n    if (isColor) {\n        parameters = extend({}, parameters);\n\n        if (parameters.stops) {\n            parameters.stops = parameters.stops.map((stop) => {\n                return [stop[0], Color.parse(stop[1])];\n            });\n        }\n\n        if (parameters.default) {\n            parameters.default = Color.parse(parameters.default);\n        } else {\n            parameters.default = Color.parse(propertySpec.default);\n        }\n    }\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb' && !colorSpaces[parameters.colorSpace]) { // eslint-disable-line import/namespace\n        throw new Error(`Unknown color space: ${parameters.colorSpace}`);\n    }\n\n    let innerFun;\n    let hashedStops;\n    let categoricalKeyType;\n    if (type === 'exponential') {\n        innerFun = evaluateExponentialFunction;\n    } else if (type === 'interval') {\n        innerFun = evaluateIntervalFunction;\n    } else if (type === 'categorical') {\n        innerFun = evaluateCategoricalFunction;\n\n        // For categorical functions, generate an Object as a hashmap of the stops for fast searching\n        hashedStops = Object.create(null);\n        for (const stop of parameters.stops) {\n            hashedStops[stop[0]] = stop[1];\n        }\n\n        // Infer key type based on first stop key-- used to encforce strict type checking later\n        categoricalKeyType = typeof parameters.stops[0][0];\n\n    } else if (type === 'identity') {\n        innerFun = evaluateIdentityFunction;\n    } else {\n        throw new Error(`Unknown function type \"${type}\"`);\n    }\n\n    if (zoomAndFeatureDependent) {\n        const featureFunctions = {};\n        const zoomStops = [];\n        for (let s = 0; s < parameters.stops.length; s++) {\n            const stop = parameters.stops[s];\n            const zoom = stop[0].zoom;\n            if (featureFunctions[zoom] === undefined) {\n                featureFunctions[zoom] = {\n                    zoom,\n                    type: parameters.type,\n                    property: parameters.property,\n                    default: parameters.default,\n                    stops: []\n                };\n                zoomStops.push(zoom);\n            }\n            featureFunctions[zoom].stops.push([stop[0].value, stop[1]]);\n        }\n\n        const featureFunctionStops = [];\n        for (const z of zoomStops) {\n            featureFunctionStops.push([featureFunctions[z].zoom, createFunction(featureFunctions[z], propertySpec)]);\n        }\n\n        return {\n            kind: 'composite',\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, {name: 'linear'}),\n            zoomStops: featureFunctionStops.map(s => s[0]),\n            evaluate({zoom}, properties) {\n                return evaluateExponentialFunction({\n                    stops: featureFunctionStops,\n                    base: parameters.base\n                }, propertySpec, zoom).evaluate(zoom, properties);\n            }\n        };\n    } else if (zoomDependent) {\n        return {\n            kind: 'camera',\n            interpolationFactor: type === 'exponential' ?\n                Interpolate.interpolationFactor.bind(undefined, {name: 'exponential', base: parameters.base !== undefined ? parameters.base : 1}) :\n                () => 0,\n            zoomStops: parameters.stops.map(s => s[0]),\n            evaluate: ({zoom}) => innerFun(parameters, propertySpec, zoom, hashedStops, categoricalKeyType)\n        };\n    } else {\n        return {\n            kind: 'source',\n            evaluate(_, feature) {\n                const value = feature && feature.properties ? feature.properties[parameters.property] : undefined;\n                if (value === undefined) {\n                    return coalesce(parameters.default, propertySpec.default);\n                }\n                return innerFun(parameters, propertySpec, value, hashedStops, categoricalKeyType);\n            }\n        };\n    }\n}\n\nfunction coalesce(a, b, c) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n    if (c !== undefined) return c;\n}\n\nfunction evaluateCategoricalFunction(parameters, propertySpec, input, hashedStops, keyType) {\n    const evaluated = typeof input === keyType ? hashedStops[input] : undefined; // Enforce strict typing on input\n    return coalesce(evaluated, parameters.default, propertySpec.default);\n}\n\nfunction evaluateIntervalFunction(parameters, propertySpec, input) {\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n\n    return parameters.stops[index][1];\n}\n\nfunction evaluateExponentialFunction(parameters, propertySpec, input) {\n    const base = parameters.base !== undefined ? parameters.base : 1;\n\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    const t = interpolationFactor(\n        input, base,\n        parameters.stops[index][0],\n        parameters.stops[index + 1][0]);\n\n    const outputLower = parameters.stops[index][1];\n    const outputUpper = parameters.stops[index + 1][1];\n    let interp = interpolate[propertySpec.type] || identityFunction; // eslint-disable-line import/namespace\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb') {\n        const colorspace = colorSpaces[parameters.colorSpace]; // eslint-disable-line import/namespace\n        interp = (a, b) => colorspace.reverse(colorspace.interpolate(colorspace.forward(a), colorspace.forward(b), t));\n    }\n\n    if (typeof outputLower.evaluate === 'function') {\n        return {\n            evaluate(...args) {\n                const evaluatedLower = outputLower.evaluate.apply(undefined, args);\n                const evaluatedUpper = outputUpper.evaluate.apply(undefined, args);\n                // Special case for fill-outline-color, which has no spec default.\n                if (evaluatedLower === undefined || evaluatedUpper === undefined) {\n                    return undefined;\n                }\n                return interp(evaluatedLower, evaluatedUpper, t);\n            }\n        };\n    }\n\n    return interp(outputLower, outputUpper, t);\n}\n\nfunction evaluateIdentityFunction(parameters, propertySpec, input) {\n    if (propertySpec.type === 'color') {\n        input = Color.parse(input);\n    } else if (propertySpec.type === 'formatted') {\n        input = Formatted.fromString(input.toString());\n    } else if (getType(input) !== propertySpec.type && (propertySpec.type !== 'enum' || !propertySpec.values[input])) {\n        input = undefined;\n    }\n    return coalesce(input, parameters.default, propertySpec.default);\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n *\n * How it works:\n * Two consecutive stop values define a (scaled and shifted) exponential\n * function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n */\nfunction interpolationFactor(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n","// @flow\n\nimport assert from 'assert';\n\nimport extend from '../util/extend';\nimport ParsingError from './parsing_error';\nimport ParsingContext from './parsing_context';\nimport EvaluationContext from './evaluation_context';\nimport CompoundExpression from './compound_expression';\nimport Step from './definitions/step';\nimport Interpolate from './definitions/interpolate';\nimport Coalesce from './definitions/coalesce';\nimport Let from './definitions/let';\nimport definitions from './definitions';\nimport * as isConstant from './is_constant';\nimport RuntimeError from './runtime_error';\nimport { success, error } from '../util/result';\nimport { supportsPropertyExpression, supportsZoomExpression, supportsInterpolation } from '../util/properties';\n\nimport type {Type, EvaluationKind} from './types';\nimport type {Value} from './values';\nimport type {Expression} from './expression';\nimport type {StylePropertySpecification} from '../style-spec';\nimport type {Result} from '../util/result';\nimport type {InterpolationType} from './definitions/interpolate';\nimport type {PropertyValueSpecification} from '../types';\n\nexport type Feature = {\n    +type: 1 | 2 | 3 | 'Unknown' | 'Point' | 'MultiPoint' | 'LineString' | 'MultiLineString' | 'Polygon' | 'MultiPolygon',\n    +id?: any,\n    +properties: {[string]: any},\n    +patterns?: {[string]: {\"min\": string, \"mid\": string, \"max\": string}}\n};\n\nexport type FeatureState = {[string]: any};\n\nexport type GlobalProperties = $ReadOnly<{\n    zoom: number,\n    heatmapDensity?: number,\n    lineProgress?: number,\n    isSupportedScript?: (string) => boolean,\n    accumulated?: Value\n}>;\n\nexport class StyleExpression {\n    expression: Expression;\n\n    _evaluator: EvaluationContext;\n    _defaultValue: Value;\n    _warningHistory: {[key: string]: boolean};\n    _enumValues: ?{[string]: any};\n\n    constructor(expression: Expression, propertySpec: ?StylePropertySpecification) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext();\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n\n    evaluateWithoutErrorHandling(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState): any {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n\n        return this.expression.evaluate(this._evaluator);\n    }\n\n    evaluate(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState): any {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            if (val === null || val === undefined) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError(`Expected value to be one of ${Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ')}, but found ${JSON.stringify(val)} instead.`);\n            }\n            return val;\n        } catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\n\nexport function isExpression(expression: mixed) {\n    return Array.isArray(expression) && expression.length > 0 &&\n        typeof expression[0] === 'string' && expression[0] in definitions;\n}\n\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nexport function createExpression(expression: mixed, propertySpec: ?StylePropertySpecification): Result<StyleExpression, Array<ParsingError>> {\n    const parser = new ParsingContext(definitions, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined,\n        propertySpec && propertySpec.type === 'string' ? {typeAnnotation: 'coerce'} : undefined);\n\n    if (!parsed) {\n        assert(parser.errors.length > 0);\n        return error(parser.errors);\n    }\n\n    return success(new StyleExpression(parsed, propertySpec));\n}\n\nexport class ZoomConstantExpression<Kind: EvaluationKind> {\n    kind: Kind;\n    isStateDependent: boolean;\n    _styleExpression: StyleExpression;\n\n    constructor(kind: Kind, expression: StyleExpression) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('constant': EvaluationKind) && !isConstant.isStateConstant(expression.expression);\n    }\n\n    evaluateWithoutErrorHandling(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState): any {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState);\n    }\n\n    evaluate(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState): any {\n        return this._styleExpression.evaluate(globals, feature, featureState);\n    }\n}\n\nexport class ZoomDependentExpression<Kind: EvaluationKind> {\n    kind: Kind;\n    zoomStops: Array<number>;\n    isStateDependent: boolean;\n\n    _styleExpression: StyleExpression;\n    _interpolationType: ?InterpolationType;\n\n    constructor(kind: Kind, expression: StyleExpression, zoomCurve: Step | Interpolate) {\n        this.kind = kind;\n        this.zoomStops = zoomCurve.labels;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('camera': EvaluationKind) && !isConstant.isStateConstant(expression.expression);\n        if (zoomCurve instanceof Interpolate) {\n            this._interpolationType = zoomCurve.interpolation;\n        }\n    }\n\n    evaluateWithoutErrorHandling(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState): any {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState);\n    }\n\n    evaluate(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState): any {\n        return this._styleExpression.evaluate(globals, feature, featureState);\n    }\n\n    interpolationFactor(input: number, lower: number, upper: number): number {\n        if (this._interpolationType) {\n            return Interpolate.interpolationFactor(this._interpolationType, input, lower, upper);\n        } else {\n            return 0;\n        }\n    }\n}\n\nexport type ConstantExpression = {\n    kind: 'constant',\n    +evaluate: (globals: GlobalProperties, feature?: Feature) => any,\n}\n\nexport type SourceExpression = {\n    kind: 'source',\n    isStateDependent: boolean,\n    +evaluate: (globals: GlobalProperties, feature?: Feature, featureState?: FeatureState) => any,\n};\n\nexport type CameraExpression = {\n    kind: 'camera',\n    +evaluate: (globals: GlobalProperties, feature?: Feature, featureState?: FeatureState) => any,\n    +interpolationFactor: (input: number, lower: number, upper: number) => number,\n    zoomStops: Array<number>\n};\n\nexport type CompositeExpression = {\n    kind: 'composite',\n    isStateDependent: boolean,\n    +evaluate: (globals: GlobalProperties, feature?: Feature, featureState?: FeatureState) => any,\n    +interpolationFactor: (input: number, lower: number, upper: number) => number,\n    zoomStops: Array<number>\n};\n\nexport type StylePropertyExpression =\n    | ConstantExpression\n    | SourceExpression\n    | CameraExpression\n    | CompositeExpression;\n\nexport function createPropertyExpression(expression: mixed, propertySpec: StylePropertySpecification): Result<StylePropertyExpression, Array<ParsingError>> {\n    expression = createExpression(expression, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n\n    const parsed = expression.value.expression;\n\n    const isFeatureConstant = isConstant.isFeatureConstant(parsed);\n    if (!isFeatureConstant && !supportsPropertyExpression(propertySpec)) {\n        return error([new ParsingError('', 'data expressions not supported')]);\n    }\n\n    const isZoomConstant = isConstant.isGlobalPropertyConstant(parsed, ['zoom']);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ParsingError('', 'zoom expressions not supported')]);\n    }\n\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    } else if (zoomCurve instanceof ParsingError) {\n        return error([zoomCurve]);\n    } else if (zoomCurve instanceof Interpolate && !supportsInterpolation(propertySpec)) {\n        return error([new ParsingError('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n\n    if (!zoomCurve) {\n        return success(isFeatureConstant ?\n            (new ZoomConstantExpression('constant', expression.value): ConstantExpression) :\n            (new ZoomConstantExpression('source', expression.value): SourceExpression));\n    }\n\n    return success(isFeatureConstant ?\n        (new ZoomDependentExpression('camera', expression.value, zoomCurve): CameraExpression) :\n        (new ZoomDependentExpression('composite', expression.value, zoomCurve): CompositeExpression));\n}\n\nimport { isFunction, createFunction } from '../function';\nimport { Color } from './values';\n\n// serialization wrapper for old-style stop functions normalized to the\n// expression interface\nexport class StylePropertyFunction<T> {\n    _parameters: PropertyValueSpecification<T>;\n    _specification: StylePropertySpecification;\n\n    kind: EvaluationKind;\n    evaluate: (globals: GlobalProperties, feature?: Feature) => any;\n    interpolationFactor: ?(input: number, lower: number, upper: number) => number;\n    zoomStops: ?Array<number>;\n\n    constructor(parameters: PropertyValueSpecification<T>, specification: StylePropertySpecification) {\n        this._parameters = parameters;\n        this._specification = specification;\n        extend(this, createFunction(this._parameters, this._specification));\n    }\n\n    static deserialize(serialized: {_parameters: PropertyValueSpecification<T>, _specification: StylePropertySpecification}) {\n        return ((new StylePropertyFunction(serialized._parameters, serialized._specification)): StylePropertyFunction<T>);\n    }\n\n    static serialize(input: StylePropertyFunction<T>) {\n        return {\n            _parameters: input._parameters,\n            _specification: input._specification\n        };\n    }\n}\n\nexport function normalizePropertyExpression<T>(value: PropertyValueSpecification<T>, specification: StylePropertySpecification): StylePropertyExpression {\n    if (isFunction(value)) {\n        return (new StylePropertyFunction(value, specification): any);\n\n    } else if (isExpression(value)) {\n        const expression = createPropertyExpression(value, specification);\n        if (expression.result === 'error') {\n            // this should have been caught in validation\n            throw new Error(expression.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        }\n        return expression.value;\n\n    } else {\n        let constant: any = value;\n        if (typeof value === 'string' && specification.type === 'color') {\n            constant = Color.parse(value);\n        }\n        return {\n            kind: 'constant',\n            evaluate: () => constant\n        };\n    }\n}\n\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression: Expression): Step | Interpolate | ParsingError | null {\n    let result = null;\n    if (expression instanceof Let) {\n        result = findZoomCurve(expression.result);\n\n    } else if (expression instanceof Coalesce) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n\n    } else if ((expression instanceof Step || expression instanceof Interpolate) &&\n        expression.input instanceof CompoundExpression &&\n        expression.input.name === 'zoom') {\n\n        result = expression;\n    }\n\n    if (result instanceof ParsingError) {\n        return result;\n    }\n\n    expression.eachChild((child) => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ParsingError) {\n            result = childResult;\n        } else if (!result && childResult) {\n            result = new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        } else if (result && childResult && result !== childResult) {\n            result = new ParsingError('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n\n    return result;\n}\n\nimport { ColorType, StringType, NumberType, BooleanType, ValueType, FormattedType, array } from './types';\n\nfunction getExpectedType(spec: StylePropertySpecification): Type {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType\n    };\n\n    if (spec.type === 'array') {\n        return array(types[spec.value] || ValueType, spec.length);\n    }\n\n    return types[spec.type];\n}\n\nfunction getDefaultValue(spec: StylePropertySpecification): Value {\n    if (spec.type === 'color' && isFunction(spec.default)) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color(0, 0, 0, 0);\n    } else if (spec.type === 'color') {\n        return Color.parse(spec.default) || null;\n    } else if (spec.default === undefined) {\n        return null;\n    } else {\n        return spec.default;\n    }\n}\n","// @flow\n\nimport assert from 'assert';\nimport type {StylePropertySpecification} from '../style-spec';\n\nexport default convertFunction;\n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? ['literal', value] : value;\n}\n\nfunction convertFunction(parameters: any, propertySpec: StylePropertySpecification) {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n\n    stops = stops.map((stop) => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [stop[0], convertTokenString(stop[1])];\n        }\n        return [stop[0], convertLiteral(stop[1])];\n    });\n\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    } else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    } else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\n\nfunction convertIdentityFunction(parameters, propertySpec): Array<mixed> {\n    const get = ['get', parameters.property];\n\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? ['string', get] : get;\n    } else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    } else {\n        const expression = [propertySpec.type === 'color' ? 'to-color' : propertySpec.type, get, convertLiteral(parameters.default)];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\n\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n    case 'hcl': return 'interpolate-hcl';\n    case 'lab': return 'interpolate-lab';\n    default: return 'interpolate';\n    }\n}\n\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default,\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([stop[0].value, stop[1]]);\n    }\n\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [getInterpolateOperator(parameters), ['linear'], ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n\n        return expression;\n    } else {\n        const expression = ['step', ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n\n        fixupDegenerateStepCurve(expression);\n\n        return expression;\n    }\n}\n\nfunction coalesce(a, b) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n}\n\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = ['get', parameters.property];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        assert(parameters.stops.length > 0 && parameters.stops.length <= 2);\n        const expression = ['case'];\n        for (const stop of stops) {\n            expression.push(['==', get, stop[0]], stop[1]);\n        }\n        expression.push(convertLiteral(coalesce(parameters.default, propertySpec.default)));\n        return expression;\n    } else if (type === 'categorical') {\n        const expression = ['match', get];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(convertLiteral(coalesce(parameters.default, propertySpec.default)));\n        return expression;\n    } else if (type === 'interval') {\n        const expression = ['step', ['number', get]];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [getInterpolateOperator(parameters), ['exponential', base], ['number', get]];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else {\n        throw new Error(`Unknown property function type ${type}`);\n    }\n}\n\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = ['step', input];\n        isStep = true;\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [getInterpolateOperator(parameters), ['exponential', base], input];\n    } else {\n        throw new Error(`Unknown zoom function type \"${type}\"`);\n    }\n\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n\n    fixupDegenerateStepCurve(expression);\n\n    return expression;\n}\n\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\n\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\n\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    } else {\n        assert(propertySpec.expression);\n        return (propertySpec.expression: any).interpolated ? 'exponential' : 'interval';\n    }\n}\n\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nexport function convertTokenString(s: string) {\n    const result = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0) result.push(literal);\n        result.push(['get', match[1]]);\n    }\n\n    if (result.length === 1) {\n        return s;\n    }\n\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    } else if (result.length === 2) {\n        return ['to-string', result[1]];\n    }\n\n    return result;\n}\n\n","// @flow\n\nimport { createExpression } from '../expression';\n\nimport type {GlobalProperties} from '../expression';\nexport type FeatureFilter = (globalProperties: GlobalProperties, feature: VectorTileFeature) => boolean;\n\nexport default createFilter;\nexport { isExpressionFilter };\n\nfunction isExpressionFilter(filter: any) {\n    if (filter === true || filter === false) {\n        return true;\n    }\n\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n    case 'has':\n        return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n\n    case 'in':\n    case '!in':\n    case '!has':\n    case 'none':\n        return false;\n\n    case '==':\n    case '!=':\n    case '>':\n    case '>=':\n    case '<':\n    case '<=':\n        return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n\n    case 'any':\n    case 'all':\n        for (const f of filter.slice(1)) {\n            if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                return false;\n            }\n        }\n        return true;\n\n    default:\n        return true;\n    }\n}\n\nconst filterSpec = {\n    'type': 'boolean',\n    'default': false,\n    'transition': false,\n    'property-type': 'data-driven',\n    'expression': {\n        'interpolated': false,\n        'parameters': ['zoom', 'feature']\n    }\n};\n\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter mapbox gl filter\n * @returns {Function} filter-evaluating function\n */\nfunction createFilter(filter: any): FeatureFilter {\n    if (filter === null || filter === undefined) {\n        return () => true;\n    }\n\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter(filter);\n    }\n\n    const compiled = createExpression(filter, filterSpec);\n    if (compiled.result === 'error') {\n        throw new Error(compiled.value.map(err => `${err.key}: ${err.message}`).join(', '));\n    } else {\n        return (globalProperties: GlobalProperties, feature: VectorTileFeature) => compiled.value.evaluate(globalProperties, feature);\n    }\n}\n\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nfunction convertFilter(filter: ?Array<any>): mixed {\n    if (!filter) return true;\n    const op = filter[0];\n    if (filter.length <= 1) return (op !== 'any');\n    const converted =\n        op === '==' ? convertComparisonOp(filter[1], filter[2], '==') :\n        op === '!=' ? convertNegation(convertComparisonOp(filter[1], filter[2], '==')) :\n        op === '<' ||\n        op === '>' ||\n        op === '<=' ||\n        op === '>=' ? convertComparisonOp(filter[1], filter[2], op) :\n        op === 'any' ? convertDisjunctionOp(filter.slice(1)) :\n        op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter)) :\n        op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter).map(convertNegation)) :\n        op === 'in' ? convertInOp(filter[1], filter.slice(2)) :\n        op === '!in' ? convertNegation(convertInOp(filter[1], filter.slice(2))) :\n        op === 'has' ? convertHasOp(filter[1]) :\n        op === '!has' ? convertNegation(convertHasOp(filter[1])) :\n        true;\n    return converted;\n}\n\nfunction convertComparisonOp(property: string, value: any, op: string) {\n    switch (property) {\n    case '$type':\n        return [`filter-type-${op}`, value];\n    case '$id':\n        return [`filter-id-${op}`, value];\n    default:\n        return [`filter-${op}`, property, value];\n    }\n}\n\nfunction convertDisjunctionOp(filters: Array<Array<any>>) {\n    return ['any'].concat(filters.map(convertFilter));\n}\n\nfunction convertInOp(property: string, values: Array<any>) {\n    if (values.length === 0) { return false; }\n    switch (property) {\n    case '$type':\n        return [`filter-type-in`, ['literal', values]];\n    case '$id':\n        return [`filter-id-in`, ['literal', values]];\n    default:\n        if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n            return ['filter-in-large', property, ['literal', values.sort(compare)]];\n        } else {\n            return ['filter-in-small', property, ['literal', values]];\n        }\n    }\n}\n\nfunction convertHasOp(property: string) {\n    switch (property) {\n    case '$type':\n        return true;\n    case '$id':\n        return [`filter-has-id`];\n    default:\n        return [`filter-has`, property];\n    }\n}\n\nfunction convertNegation(filter: mixed) {\n    return ['!', filter];\n}\n","// @flow\n\nimport { isExpressionFilter } from './index';\n\nimport type { FilterSpecification } from '../types';\n\ntype ExpectedTypes = {[string]: 'string' | 'number' | 'boolean'};\n\n/**\n * Convert the given legacy filter to (the JSON representation of) an\n * equivalent expression\n * @private\n */\nexport default function convertFilter(filter: FilterSpecification): mixed {\n    return _convertFilter(filter, {});\n}\n\n/*\n * Convert the given filter to an expression, storing the expected types for\n * any feature properties referenced in expectedTypes.\n *\n * These expected types are needed in order to construct preflight type checks\n * needed for handling 'any' filters. A preflight type check is necessary in\n * order to mimic legacy filters' semantics around expected type mismatches.\n * For example, consider the legacy filter:\n *\n *     [\"any\", [\"all\", [\">\", \"y\", 0], [\">\", \"y\", 0]], [\">\", \"x\", 0]]\n *\n * Naively, we might convert this to the expression:\n *\n *     [\"any\", [\"all\", [\">\", [\"get\", \"y\"], 0], [\">\", [\"get\", \"z\"], 0]], [\">\", [\"get\", \"x\"], 0]]\n *\n * But if we tried to evaluate this against, say `{x: 1, y: null, z: 0}`, the\n * [\">\", [\"get\", \"y\"], 0] would cause an evaluation error, leading to the\n * entire filter returning false. Legacy filter semantics, though, ask for\n * [\">\", \"y\", 0] to simply return `false` when `y` is of the wrong type,\n * allowing the subsequent terms of the outer \"any\" expression to be evaluated\n * (resulting, in this case, in a `true` value, because x > 0).\n *\n * We account for this by inserting a preflight type-checking expression before\n * each \"any\" term, allowing us to avoid evaluating the actual converted filter\n * if any type mismatches would cause it to produce an evalaution error:\n *\n *     [\"any\",\n *       [\"case\",\n *         [\"all\", [\"==\", [\"typeof\", [\"get\", \"y\"]], \"number\"], [\"==\", [\"typeof\", [\"get\", \"z\"], \"number]],\n *         [\"all\", [\">\", [\"get\", \"y\"], 0], [\">\", [\"get\", \"z\"], 0]],\n *         false\n *       ],\n *       [\"case\",\n *         [\"==\", [\"typeof\", [\"get\", \"x\"], \"number\"]],\n *         [\">\", [\"get\", \"x\"], 0],\n *         false\n *       ]\n *     ]\n *\n * An alternative, possibly more direct approach would be to use type checks\n * in the conversion of each comparison operator, so that the converted version\n * of each individual ==, >=, etc. would mimic the legacy filter semantics. The\n * downside of this approach is that it can lead to many more type checks than\n * would otherwise be necessary: outside the context of an \"any\" expression,\n * bailing out due to a runtime type error (expression semantics) and returning\n * false (legacy filter semantics) are equivalent: they cause the filter to\n * produce a `false` result.\n */\nfunction _convertFilter(filter: FilterSpecification, expectedTypes: ExpectedTypes): mixed {\n    if (isExpressionFilter(filter)) { return filter; }\n\n    if (!filter) return true;\n    const op = filter[0];\n    if (filter.length <= 1) return (op !== 'any');\n\n    let converted;\n\n    if (\n        op === '==' ||\n        op === '!=' ||\n        op === '<' ||\n        op === '>' ||\n        op === '<=' ||\n        op === '>='\n    ) {\n        const [, property, value] = (filter: any);\n        converted = convertComparisonOp(property, value, op, expectedTypes);\n    } else if (op === 'any') {\n        const children = (filter: any).slice(1).map(f => {\n            const types = {};\n            const child = _convertFilter(f, types);\n            const typechecks = runtimeTypeChecks(types);\n            return typechecks === true ? child : ['case', typechecks, child, false];\n        });\n        return ['any'].concat(children);\n    } else if (op === 'all') {\n        const children = (filter: any).slice(1).map(f => _convertFilter(f, expectedTypes));\n        return children.length > 1 ? ['all'].concat(children) : [].concat(...children);\n    } else if (op === 'none') {\n        return ['!', _convertFilter(['any'].concat(filter.slice(1)), {})];\n    } else if (op === 'in') {\n        converted = convertInOp((filter[1]: any), filter.slice(2));\n    } else if (op === '!in') {\n        converted = convertInOp((filter[1]: any), filter.slice(2), true);\n    } else if (op === 'has') {\n        converted = convertHasOp((filter[1]: any));\n    } else if (op === '!has') {\n        converted = ['!', convertHasOp((filter[1]: any))];\n    } else {\n        converted = true;\n    }\n\n    return converted;\n}\n\n// Given a set of feature properties and an expected type for each one,\n// construct an boolean expression that tests whether each property has the\n// right type.\n// E.g.: for {name: 'string', population: 'number'}, return\n// [ 'all',\n//   ['==', ['typeof', ['get', 'name'], 'string']],\n//   ['==', ['typeof', ['get', 'population'], 'number]]\n// ]\nfunction runtimeTypeChecks(expectedTypes: ExpectedTypes) {\n    const conditions = [];\n    for (const property in expectedTypes) {\n        const get = property === '$id' ? ['id'] : ['get', property];\n        conditions.push(['==', ['typeof', get], expectedTypes[property]]);\n    }\n    if (conditions.length === 0) return true;\n    if (conditions.length === 1) return conditions[0];\n    return ['all'].concat(conditions);\n}\n\nfunction convertComparisonOp(property: string, value: any, op: string, expectedTypes: ?ExpectedTypes) {\n    let get;\n    if (property === '$type') {\n        return [op, ['geometry-type'], value];\n    } else if (property === '$id') {\n        get = ['id'];\n    } else {\n        get = ['get', property];\n    }\n\n    if (expectedTypes && value !== null) {\n        const type = ((typeof value): any);\n        expectedTypes[property] = type;\n    }\n\n    if (op === '==' && property !== '$id' && value === null) {\n        return [\n            'all',\n            ['has', property], // missing property != null for legacy filters\n            ['==', get, null]\n        ];\n    } else if (op === '!=' && property !== '$id' && value === null) {\n        return [\n            'any',\n            ['!', ['has', property]], // missing property != null for legacy filters\n            ['!=', get, null]\n        ];\n    }\n\n    return [op, get, value];\n}\n\nfunction convertInOp(property: string, values: Array<any>, negate = false) {\n    if (values.length === 0) return negate;\n\n    let get;\n    if (property === '$type') {\n        get = ['geometry-type'];\n    } else if (property === '$id') {\n        get = ['id'];\n    } else {\n        get = ['get', property];\n    }\n\n    // Determine if the list of values to be searched is homogenously typed.\n    // If so (and if the type is string or number), then we can use a\n    // [match, input, [...values], true, false] construction rather than a\n    // bunch of `==` tests.\n    let uniformTypes = true;\n    const type = typeof values[0];\n    for (const value of values) {\n        if (typeof value !== type) {\n            uniformTypes = false;\n            break;\n        }\n    }\n\n    if (uniformTypes && (type === 'string' || type === 'number')) {\n        return ['match', get, values, !negate, negate];\n    }\n\n    return [ negate ? 'all' : 'any' ].concat(\n        values.map(v => [negate ? '!=' : '==', get, v])\n    );\n}\n\nfunction convertHasOp(property: string) {\n    if (property === '$type') {\n        return true;\n    } else if (property === '$id') {\n        return ['!=', ['id'], null];\n    } else {\n        return ['has', property];\n    }\n}\n","// @flow\n\nimport {\n    eachLayer,\n    eachProperty\n} from '../visit';\nimport { isExpression } from '../expression';\nimport convertFunction, {convertTokenString} from '../function/convert';\nimport convertFilter from '../feature_filter/convert';\n\nimport type { StyleSpecification } from '../types';\n\n/**\n * Migrate the given style object in place to use expressions. Specifically,\n * this will convert (a) \"stop\" functions, and (b) legacy filters to their\n * expression equivalents.\n */\nexport default function(style: StyleSpecification) {\n    const converted = [];\n\n    eachLayer(style, (layer) => {\n        if (layer.filter) {\n            layer.filter = (convertFilter(layer.filter): any);\n        }\n    });\n\n    eachProperty(style, {paint: true, layout: true}, ({path, value, reference, set}) => {\n        if (isExpression(value)) return;\n        if (typeof value === 'object' && !Array.isArray(value)) {\n            set(convertFunction(value, reference));\n            converted.push(path.join('.'));\n        } else if (reference.tokens && typeof value === 'string') {\n            set(convertTokenString(value));\n        }\n    });\n\n    return style;\n}\n\n","\nimport migrateToV8 from './migrate/v8';\nimport migrateToExpressions from './migrate/expressions';\n\n/**\n * Migrate a Mapbox GL Style to the latest version.\n *\n * @private\n * @alias migrate\n * @param {object} style a Mapbox GL Style\n * @returns {Object} a migrated style\n * @example\n * var fs = require('fs');\n * var migrate = require('mapbox-gl-style-spec').migrate;\n * var style = fs.readFileSync('./style.json', 'utf8');\n * fs.writeFileSync('./style.json', JSON.stringify(migrate(style)));\n */\nexport default function(style) {\n    let migrated = false;\n\n    if (style.version === 7) {\n        style = migrateToV8(style);\n        migrated = true;\n    }\n\n    if (style.version === 8) {\n        migrated = migrateToExpressions(style);\n        migrated = true;\n    }\n\n    if (!migrated) {\n        throw new Error('cannot migrate from', style.version);\n    }\n\n    return style;\n}\n","\nexport default function (style) {\n    const styleIDs = [];\n    const sourceIDs = [];\n    const compositedSourceLayers = [];\n\n    for (const id in style.sources) {\n        const source = style.sources[id];\n\n        if (source.type !== \"vector\")\n            continue;\n\n        const match = /^mapbox:\\/\\/(.*)/.exec(source.url);\n        if (!match)\n            continue;\n\n        styleIDs.push(id);\n        sourceIDs.push(match[1]);\n    }\n\n    if (styleIDs.length < 2)\n        return style;\n\n    styleIDs.forEach((id) => {\n        delete style.sources[id];\n    });\n\n    const compositeID = sourceIDs.join(\",\");\n\n    style.sources[compositeID] = {\n        \"type\": \"vector\",\n        \"url\": `mapbox://${compositeID}`\n    };\n\n    style.layers.forEach((layer) => {\n        if (styleIDs.indexOf(layer.source) >= 0) {\n            layer.source = compositeID;\n\n            if ('source-layer' in layer) {\n                if (compositedSourceLayers.indexOf(layer['source-layer']) >= 0) {\n                    throw new Error('Conflicting source layer names');\n                } else {\n                    compositedSourceLayers.push(layer['source-layer']);\n                }\n            }\n        }\n    });\n\n    return style;\n}\n","// @flow\n\n/**\n * Deeply compares two object literals.\n *\n * @private\n */\nfunction deepEqual(a: ?mixed, b: ?mixed): boolean {\n    if (Array.isArray(a)) {\n        if (!Array.isArray(b) || a.length !== b.length) return false;\n        for (let i = 0; i < a.length; i++) {\n            if (!deepEqual(a[i], b[i])) return false;\n        }\n        return true;\n    }\n    if (typeof a === 'object' && a !== null && b !== null) {\n        if (!(typeof b === 'object')) return false;\n        const keys = Object.keys(a);\n        if (keys.length !== Object.keys(b).length) return false;\n        for (const key in a) {\n            if (!deepEqual(a[key], b[key])) return false;\n        }\n        return true;\n    }\n    return a === b;\n}\n\nexport default deepEqual;\n","\nimport isEqual from './util/deep_equal';\n\nconst operations = {\n\n    /*\n     * { command: 'setStyle', args: [stylesheet] }\n     */\n    setStyle: 'setStyle',\n\n    /*\n     * { command: 'addLayer', args: [layer, 'beforeLayerId'] }\n     */\n    addLayer: 'addLayer',\n\n    /*\n     * { command: 'removeLayer', args: ['layerId'] }\n     */\n    removeLayer: 'removeLayer',\n\n    /*\n     * { command: 'setPaintProperty', args: ['layerId', 'prop', value] }\n     */\n    setPaintProperty: 'setPaintProperty',\n\n    /*\n     * { command: 'setLayoutProperty', args: ['layerId', 'prop', value] }\n     */\n    setLayoutProperty: 'setLayoutProperty',\n\n    /*\n     * { command: 'setFilter', args: ['layerId', filter] }\n     */\n    setFilter: 'setFilter',\n\n    /*\n     * { command: 'addSource', args: ['sourceId', source] }\n     */\n    addSource: 'addSource',\n\n    /*\n     * { command: 'removeSource', args: ['sourceId'] }\n     */\n    removeSource: 'removeSource',\n\n    /*\n     * { command: 'setGeoJSONSourceData', args: ['sourceId', data] }\n     */\n    setGeoJSONSourceData: 'setGeoJSONSourceData',\n\n    /*\n     * { command: 'setLayerZoomRange', args: ['layerId', 0, 22] }\n     */\n    setLayerZoomRange: 'setLayerZoomRange',\n\n    /*\n     * { command: 'setLayerProperty', args: ['layerId', 'prop', value] }\n     */\n    setLayerProperty: 'setLayerProperty',\n\n    /*\n     * { command: 'setCenter', args: [[lon, lat]] }\n     */\n    setCenter: 'setCenter',\n\n    /*\n     * { command: 'setZoom', args: [zoom] }\n     */\n    setZoom: 'setZoom',\n\n    /*\n     * { command: 'setBearing', args: [bearing] }\n     */\n    setBearing: 'setBearing',\n\n    /*\n     * { command: 'setPitch', args: [pitch] }\n     */\n    setPitch: 'setPitch',\n\n    /*\n     * { command: 'setSprite', args: ['spriteUrl'] }\n     */\n    setSprite: 'setSprite',\n\n    /*\n     * { command: 'setGlyphs', args: ['glyphsUrl'] }\n     */\n    setGlyphs: 'setGlyphs',\n\n    /*\n     * { command: 'setTransition', args: [transition] }\n     */\n    setTransition: 'setTransition',\n\n    /*\n     * { command: 'setLighting', args: [lightProperties] }\n     */\n    setLight: 'setLight'\n\n};\n\nfunction addSource(sourceId, after, commands) {\n    commands.push({ command: operations.addSource, args: [sourceId, after[sourceId]] });\n}\n\nfunction removeSource(sourceId, commands, sourcesRemoved) {\n    commands.push({ command: operations.removeSource, args: [sourceId] });\n    sourcesRemoved[sourceId] = true;\n}\n\nfunction updateSource(sourceId, after, commands, sourcesRemoved) {\n    removeSource(sourceId, commands, sourcesRemoved);\n    addSource(sourceId, after, commands);\n}\n\nfunction canUpdateGeoJSON(before, after, sourceId) {\n    let prop;\n    for (prop in before[sourceId]) {\n        if (!before[sourceId].hasOwnProperty(prop)) continue;\n        if (prop !== 'data' && !isEqual(before[sourceId][prop], after[sourceId][prop])) {\n            return false;\n        }\n    }\n    for (prop in after[sourceId]) {\n        if (!after[sourceId].hasOwnProperty(prop)) continue;\n        if (prop !== 'data' && !isEqual(before[sourceId][prop], after[sourceId][prop])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction diffSources(before, after, commands, sourcesRemoved) {\n    before = before || {};\n    after = after || {};\n\n    let sourceId;\n\n    // look for sources to remove\n    for (sourceId in before) {\n        if (!before.hasOwnProperty(sourceId)) continue;\n        if (!after.hasOwnProperty(sourceId)) {\n            removeSource(sourceId, commands, sourcesRemoved);\n        }\n    }\n\n    // look for sources to add/update\n    for (sourceId in after) {\n        if (!after.hasOwnProperty(sourceId)) continue;\n        if (!before.hasOwnProperty(sourceId)) {\n            addSource(sourceId, after, commands);\n        } else if (!isEqual(before[sourceId], after[sourceId])) {\n            if (before[sourceId].type === 'geojson' && after[sourceId].type === 'geojson' && canUpdateGeoJSON(before, after, sourceId)) {\n                commands.push({ command: operations.setGeoJSONSourceData, args: [sourceId, after[sourceId].data] });\n            } else {\n                // no update command, must remove then add\n                updateSource(sourceId, after, commands, sourcesRemoved);\n            }\n        }\n    }\n}\n\nfunction diffLayerPropertyChanges(before, after, commands, layerId, klass, command) {\n    before = before || {};\n    after = after || {};\n\n    let prop;\n\n    for (prop in before) {\n        if (!before.hasOwnProperty(prop)) continue;\n        if (!isEqual(before[prop], after[prop])) {\n            commands.push({ command, args: [layerId, prop, after[prop], klass] });\n        }\n    }\n    for (prop in after) {\n        if (!after.hasOwnProperty(prop) || before.hasOwnProperty(prop)) continue;\n        if (!isEqual(before[prop], after[prop])) {\n            commands.push({ command, args: [layerId, prop, after[prop], klass] });\n        }\n    }\n}\n\nfunction pluckId(layer) {\n    return layer.id;\n}\nfunction indexById(group, layer) {\n    group[layer.id] = layer;\n    return group;\n}\n\nfunction diffLayers(before, after, commands) {\n    before = before || [];\n    after = after || [];\n\n    // order of layers by id\n    const beforeOrder = before.map(pluckId);\n    const afterOrder = after.map(pluckId);\n\n    // index of layer by id\n    const beforeIndex = before.reduce(indexById, {});\n    const afterIndex = after.reduce(indexById, {});\n\n    // track order of layers as if they have been mutated\n    const tracker = beforeOrder.slice();\n\n    // layers that have been added do not need to be diffed\n    const clean = Object.create(null);\n\n    let i, d, layerId, beforeLayer, afterLayer, insertBeforeLayerId, prop;\n\n    // remove layers\n    for (i = 0, d = 0; i < beforeOrder.length; i++) {\n        layerId = beforeOrder[i];\n        if (!afterIndex.hasOwnProperty(layerId)) {\n            commands.push({ command: operations.removeLayer, args: [layerId] });\n            tracker.splice(tracker.indexOf(layerId, d), 1);\n        } else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n    }\n\n    // add/reorder layers\n    for (i = 0, d = 0; i < afterOrder.length; i++) {\n        // work backwards as insert is before an existing layer\n        layerId = afterOrder[afterOrder.length - 1 - i];\n\n        if (tracker[tracker.length - 1 - i] === layerId) continue;\n\n        if (beforeIndex.hasOwnProperty(layerId)) {\n            // remove the layer before we insert at the correct position\n            commands.push({ command: operations.removeLayer, args: [layerId] });\n            tracker.splice(tracker.lastIndexOf(layerId, tracker.length - d), 1);\n        } else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n\n        // add layer at correct position\n        insertBeforeLayerId = tracker[tracker.length - i];\n        commands.push({ command: operations.addLayer, args: [afterIndex[layerId], insertBeforeLayerId] });\n        tracker.splice(tracker.length - i, 0, layerId);\n        clean[layerId] = true;\n    }\n\n    // update layers\n    for (i = 0; i < afterOrder.length; i++) {\n        layerId = afterOrder[i];\n        beforeLayer = beforeIndex[layerId];\n        afterLayer = afterIndex[layerId];\n\n        // no need to update if previously added (new or moved)\n        if (clean[layerId] || isEqual(beforeLayer, afterLayer)) continue;\n\n        // If source, source-layer, or type have changes, then remove the layer\n        // and add it back 'from scratch'.\n        if (!isEqual(beforeLayer.source, afterLayer.source) || !isEqual(beforeLayer['source-layer'], afterLayer['source-layer']) || !isEqual(beforeLayer.type, afterLayer.type)) {\n            commands.push({ command: operations.removeLayer, args: [layerId] });\n            // we add the layer back at the same position it was already in, so\n            // there's no need to update the `tracker`\n            insertBeforeLayerId = tracker[tracker.lastIndexOf(layerId) + 1];\n            commands.push({ command: operations.addLayer, args: [afterLayer, insertBeforeLayerId] });\n            continue;\n        }\n\n        // layout, paint, filter, minzoom, maxzoom\n        diffLayerPropertyChanges(beforeLayer.layout, afterLayer.layout, commands, layerId, null, operations.setLayoutProperty);\n        diffLayerPropertyChanges(beforeLayer.paint, afterLayer.paint, commands, layerId, null, operations.setPaintProperty);\n        if (!isEqual(beforeLayer.filter, afterLayer.filter)) {\n            commands.push({ command: operations.setFilter, args: [layerId, afterLayer.filter] });\n        }\n        if (!isEqual(beforeLayer.minzoom, afterLayer.minzoom) || !isEqual(beforeLayer.maxzoom, afterLayer.maxzoom)) {\n            commands.push({ command: operations.setLayerZoomRange, args: [layerId, afterLayer.minzoom, afterLayer.maxzoom] });\n        }\n\n        // handle all other layer props, including paint.*\n        for (prop in beforeLayer) {\n            if (!beforeLayer.hasOwnProperty(prop)) continue;\n            if (prop === 'layout' || prop === 'paint' || prop === 'filter' ||\n                prop === 'metadata' || prop === 'minzoom' || prop === 'maxzoom') continue;\n            if (prop.indexOf('paint.') === 0) {\n                diffLayerPropertyChanges(beforeLayer[prop], afterLayer[prop], commands, layerId, prop.slice(6), operations.setPaintProperty);\n            } else if (!isEqual(beforeLayer[prop], afterLayer[prop])) {\n                commands.push({ command: operations.setLayerProperty, args: [layerId, prop, afterLayer[prop]] });\n            }\n        }\n        for (prop in afterLayer) {\n            if (!afterLayer.hasOwnProperty(prop) || beforeLayer.hasOwnProperty(prop)) continue;\n            if (prop === 'layout' || prop === 'paint' || prop === 'filter' ||\n                prop === 'metadata' || prop === 'minzoom' || prop === 'maxzoom') continue;\n            if (prop.indexOf('paint.') === 0) {\n                diffLayerPropertyChanges(beforeLayer[prop], afterLayer[prop], commands, layerId, prop.slice(6), operations.setPaintProperty);\n            } else if (!isEqual(beforeLayer[prop], afterLayer[prop])) {\n                commands.push({ command: operations.setLayerProperty, args: [layerId, prop, afterLayer[prop]] });\n            }\n        }\n    }\n}\n\n/**\n * Diff two stylesheet\n *\n * Creates semanticly aware diffs that can easily be applied at runtime.\n * Operations produced by the diff closely resemble the mapbox-gl-js API. Any\n * error creating the diff will fall back to the 'setStyle' operation.\n *\n * Example diff:\n * [\n *     { command: 'setConstant', args: ['@water', '#0000FF'] },\n *     { command: 'setPaintProperty', args: ['background', 'background-color', 'black'] }\n * ]\n *\n * @private\n * @param {*} [before] stylesheet to compare from\n * @param {*} after stylesheet to compare to\n * @returns Array list of changes\n */\nfunction diffStyles(before, after) {\n    if (!before) return [{ command: operations.setStyle, args: [after] }];\n\n    let commands = [];\n\n    try {\n        // Handle changes to top-level properties\n        if (!isEqual(before.version, after.version)) {\n            return [{ command: operations.setStyle, args: [after] }];\n        }\n        if (!isEqual(before.center, after.center)) {\n            commands.push({ command: operations.setCenter, args: [after.center] });\n        }\n        if (!isEqual(before.zoom, after.zoom)) {\n            commands.push({ command: operations.setZoom, args: [after.zoom] });\n        }\n        if (!isEqual(before.bearing, after.bearing)) {\n            commands.push({ command: operations.setBearing, args: [after.bearing] });\n        }\n        if (!isEqual(before.pitch, after.pitch)) {\n            commands.push({ command: operations.setPitch, args: [after.pitch] });\n        }\n        if (!isEqual(before.sprite, after.sprite)) {\n            commands.push({ command: operations.setSprite, args: [after.sprite] });\n        }\n        if (!isEqual(before.glyphs, after.glyphs)) {\n            commands.push({ command: operations.setGlyphs, args: [after.glyphs] });\n        }\n        if (!isEqual(before.transition, after.transition)) {\n            commands.push({ command: operations.setTransition, args: [after.transition] });\n        }\n        if (!isEqual(before.light, after.light)) {\n            commands.push({ command: operations.setLight, args: [after.light] });\n        }\n\n        // Handle changes to `sources`\n        // If a source is to be removed, we also--before the removeSource\n        // command--need to remove all the style layers that depend on it.\n        const sourcesRemoved = {};\n\n        // First collect the {add,remove}Source commands\n        const removeOrAddSourceCommands = [];\n        diffSources(before.sources, after.sources, removeOrAddSourceCommands, sourcesRemoved);\n\n        // Push a removeLayer command for each style layer that depends on a\n        // source that's being removed.\n        // Also, exclude any such layers them from the input to `diffLayers`\n        // below, so that diffLayers produces the appropriate `addLayers`\n        // command\n        const beforeLayers = [];\n        if (before.layers) {\n            before.layers.forEach((layer) => {\n                if (sourcesRemoved[layer.source]) {\n                    commands.push({ command: operations.removeLayer, args: [layer.id] });\n                } else {\n                    beforeLayers.push(layer);\n                }\n            });\n        }\n        commands = commands.concat(removeOrAddSourceCommands);\n\n        // Handle changes to `layers`\n        diffLayers(beforeLayers, after.layers, commands);\n\n    } catch (e) {\n        // fall back to setStyle\n        console.warn('Unable to compute style diff:', e);\n        commands = [{ command: operations.setStyle, args: [after] }];\n    }\n\n    return commands;\n}\n\nexport default diffStyles;\nexport { operations };\n","\nexport default class ValidationError {\n    constructor(key, value, message, identifier) {\n        this.message = (key ? `${key}: ` : '') + message;\n        if (identifier) this.identifier = identifier;\n\n        if (value !== null && value !== undefined && value.__line__) {\n            this.line = value.__line__;\n        }\n    }\n}\n","\nfunction ParsingError(error) {\n    this.error = error;\n    this.message = error.message;\n    const match = error.message.match(/line (\\d+)/);\n    this.line = match ? parseInt(match[1], 10) : 0;\n}\n\nexport default ParsingError;\n","\nimport ValidationError from '../error/validation_error';\n\nexport default function validateConstants(options) {\n    const key = options.key;\n    const constants = options.value;\n\n    if (constants) {\n        return [new ValidationError(key, constants, 'constants have been deprecated as of v8')];\n    } else {\n        return [];\n    }\n}\n","\n// Turn jsonlint-lines-primitives objects into primitive objects\nexport function unbundle(value) {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    } else {\n        return value;\n    }\n}\n\nexport function deepUnbundle(value) {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    }\n    return unbundle(value);\n}\n\n","\nimport ValidationError from '../error/validation_error';\nimport getType from '../util/get_type';\nimport validateSpec from './validate';\n\nexport default function validateObject(options) {\n    const key = options.key;\n    const object = options.value;\n    const elementSpecs = options.valueSpec || {};\n    const elementValidators = options.objectElementValidators || {};\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    let errors = [];\n\n    const type = getType(object);\n    if (type !== 'object') {\n        return [new ValidationError(key, object, `object expected, ${type} found`)];\n    }\n\n    for (const objectKey in object) {\n        const elementSpecKey = objectKey.split('.')[0]; // treat 'paint.*' as 'paint'\n        const elementSpec = elementSpecs[elementSpecKey] || elementSpecs['*'];\n\n        let validateElement;\n        if (elementValidators[elementSpecKey]) {\n            validateElement = elementValidators[elementSpecKey];\n        } else if (elementSpecs[elementSpecKey]) {\n            validateElement = validateSpec;\n        } else if (elementValidators['*']) {\n            validateElement = elementValidators['*'];\n        } else if (elementSpecs['*']) {\n            validateElement = validateSpec;\n        } else {\n            errors.push(new ValidationError(key, object[objectKey], `unknown property \"${objectKey}\"`));\n            continue;\n        }\n\n        errors = errors.concat(validateElement({\n            key: (key ? `${key}.` : key) + objectKey,\n            value: object[objectKey],\n            valueSpec: elementSpec,\n            style,\n            styleSpec,\n            object,\n            objectKey\n        }, object));\n    }\n\n    for (const elementSpecKey in elementSpecs) {\n        // Don't check `required` when there's a custom validator for that property.\n        if (elementValidators[elementSpecKey]) {\n            continue;\n        }\n\n        if (elementSpecs[elementSpecKey].required && elementSpecs[elementSpecKey]['default'] === undefined && object[elementSpecKey] === undefined) {\n            errors.push(new ValidationError(key, object, `missing required property \"${elementSpecKey}\"`));\n        }\n    }\n\n    return errors;\n}\n","\nimport getType from '../util/get_type';\nimport validate from './validate';\nimport ValidationError from '../error/validation_error';\n\nexport default function validateArray(options) {\n    const array = options.value;\n    const arraySpec = options.valueSpec;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const key = options.key;\n    const validateArrayElement = options.arrayElementValidator || validate;\n\n    if (getType(array) !== 'array') {\n        return [new ValidationError(key, array, `array expected, ${getType(array)} found`)];\n    }\n\n    if (arraySpec.length && array.length !== arraySpec.length) {\n        return [new ValidationError(key, array, `array length ${arraySpec.length} expected, length ${array.length} found`)];\n    }\n\n    if (arraySpec['min-length'] && array.length < arraySpec['min-length']) {\n        return [new ValidationError(key, array, `array length at least ${arraySpec['min-length']} expected, length ${array.length} found`)];\n    }\n\n    let arrayElementSpec = {\n        \"type\": arraySpec.value,\n        \"values\": arraySpec.values\n    };\n\n    if (styleSpec.$version < 7) {\n        arrayElementSpec.function = arraySpec.function;\n    }\n\n    if (getType(arraySpec.value) === 'object') {\n        arrayElementSpec = arraySpec.value;\n    }\n\n    let errors = [];\n    for (let i = 0; i < array.length; i++) {\n        errors = errors.concat(validateArrayElement({\n            array,\n            arrayIndex: i,\n            value: array[i],\n            valueSpec: arrayElementSpec,\n            style,\n            styleSpec,\n            key: `${key}[${i}]`\n        }));\n    }\n    return errors;\n}\n","\nimport getType from '../util/get_type';\nimport ValidationError from '../error/validation_error';\n\nexport default function validateNumber(options) {\n    const key = options.key;\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    const type = getType(value);\n\n    if (type !== 'number') {\n        return [new ValidationError(key, value, `number expected, ${type} found`)];\n    }\n\n    if ('minimum' in valueSpec && value < valueSpec.minimum) {\n        return [new ValidationError(key, value, `${value} is less than the minimum value ${valueSpec.minimum}`)];\n    }\n\n    if ('maximum' in valueSpec && value > valueSpec.maximum) {\n        return [new ValidationError(key, value, `${value} is greater than the maximum value ${valueSpec.maximum}`)];\n    }\n\n    return [];\n}\n","\nimport ValidationError from '../error/validation_error';\nimport getType from '../util/get_type';\nimport validate from './validate';\nimport validateObject from './validate_object';\nimport validateArray from './validate_array';\nimport validateNumber from './validate_number';\nimport { isExpression } from '../expression';\nimport { unbundle, deepUnbundle } from '../util/unbundle_jsonlint';\nimport {\n    supportsPropertyExpression,\n    supportsZoomExpression,\n    supportsInterpolation\n} from '../util/properties';\n\nexport default function validateFunction(options) {\n    const functionValueSpec = options.valueSpec;\n    const functionType = unbundle(options.value.type);\n    let stopKeyType;\n    let stopDomainValues = {};\n    let previousStopDomainValue;\n    let previousStopDomainZoom;\n\n    const isZoomFunction = functionType !== 'categorical' && options.value.property === undefined;\n    const isPropertyFunction = !isZoomFunction;\n    const isZoomAndPropertyFunction =\n        getType(options.value.stops) === 'array' &&\n        getType(options.value.stops[0]) === 'array' &&\n        getType(options.value.stops[0][0]) === 'object';\n\n    const errors = validateObject({\n        key: options.key,\n        value: options.value,\n        valueSpec: options.styleSpec.function,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        objectElementValidators: {\n            stops: validateFunctionStops,\n            default: validateFunctionDefault\n        }\n    });\n\n    if (functionType === 'identity' && isZoomFunction) {\n        errors.push(new ValidationError(options.key, options.value, 'missing required property \"property\"'));\n    }\n\n    if (functionType !== 'identity' && !options.value.stops) {\n        errors.push(new ValidationError(options.key, options.value, 'missing required property \"stops\"'));\n    }\n\n    if (functionType === 'exponential' && options.valueSpec.expression && !supportsInterpolation(options.valueSpec)) {\n        errors.push(new ValidationError(options.key, options.value, 'exponential functions not supported'));\n    }\n\n    if (options.styleSpec.$version >= 8) {\n        if (isPropertyFunction && !supportsPropertyExpression(options.valueSpec)) {\n            errors.push(new ValidationError(options.key, options.value, 'property functions not supported'));\n        } else if (isZoomFunction && !supportsZoomExpression(options.valueSpec)) {\n            errors.push(new ValidationError(options.key, options.value, 'zoom functions not supported'));\n        }\n    }\n\n    if ((functionType === 'categorical' || isZoomAndPropertyFunction) && options.value.property === undefined) {\n        errors.push(new ValidationError(options.key, options.value, '\"property\" property is required'));\n    }\n\n    return errors;\n\n    function validateFunctionStops(options) {\n        if (functionType === 'identity') {\n            return [new ValidationError(options.key, options.value, 'identity function may not have a \"stops\" property')];\n        }\n\n        let errors = [];\n        const value = options.value;\n\n        errors = errors.concat(validateArray({\n            key: options.key,\n            value,\n            valueSpec: options.valueSpec,\n            style: options.style,\n            styleSpec: options.styleSpec,\n            arrayElementValidator: validateFunctionStop\n        }));\n\n        if (getType(value) === 'array' && value.length === 0) {\n            errors.push(new ValidationError(options.key, value, 'array must have at least one stop'));\n        }\n\n        return errors;\n    }\n\n    function validateFunctionStop(options) {\n        let errors = [];\n        const value = options.value;\n        const key = options.key;\n\n        if (getType(value) !== 'array') {\n            return [new ValidationError(key, value, `array expected, ${getType(value)} found`)];\n        }\n\n        if (value.length !== 2) {\n            return [new ValidationError(key, value, `array length 2 expected, length ${value.length} found`)];\n        }\n\n        if (isZoomAndPropertyFunction) {\n            if (getType(value[0]) !== 'object') {\n                return [new ValidationError(key, value, `object expected, ${getType(value[0])} found`)];\n            }\n            if (value[0].zoom === undefined) {\n                return [new ValidationError(key, value, 'object stop key must have zoom')];\n            }\n            if (value[0].value === undefined) {\n                return [new ValidationError(key, value, 'object stop key must have value')];\n            }\n            if (previousStopDomainZoom && previousStopDomainZoom > unbundle(value[0].zoom)) {\n                return [new ValidationError(key, value[0].zoom, 'stop zoom values must appear in ascending order')];\n            }\n            if (unbundle(value[0].zoom) !== previousStopDomainZoom) {\n                previousStopDomainZoom = unbundle(value[0].zoom);\n                previousStopDomainValue = undefined;\n                stopDomainValues = {};\n            }\n            errors = errors.concat(validateObject({\n                key: `${key}[0]`,\n                value: value[0],\n                valueSpec: { zoom: {} },\n                style: options.style,\n                styleSpec: options.styleSpec,\n                objectElementValidators: { zoom: validateNumber, value: validateStopDomainValue }\n            }));\n        } else {\n            errors = errors.concat(validateStopDomainValue({\n                key: `${key}[0]`,\n                value: value[0],\n                valueSpec: {},\n                style: options.style,\n                styleSpec: options.styleSpec\n            }, value));\n        }\n\n        if (isExpression(deepUnbundle(value[1]))) {\n            return errors.concat([new ValidationError(`${key}[1]`, value[1], 'expressions are not allowed in function stops.')]);\n        }\n\n        return errors.concat(validate({\n            key: `${key}[1]`,\n            value: value[1],\n            valueSpec: functionValueSpec,\n            style: options.style,\n            styleSpec: options.styleSpec\n        }));\n    }\n\n    function validateStopDomainValue(options, stop) {\n        const type = getType(options.value);\n        const value = unbundle(options.value);\n\n        const reportValue = options.value !== null ? options.value : stop;\n\n        if (!stopKeyType) {\n            stopKeyType = type;\n        } else if (type !== stopKeyType) {\n            return [new ValidationError(options.key, reportValue, `${type} stop domain type must match previous stop domain type ${stopKeyType}`)];\n        }\n\n        if (type !== 'number' && type !== 'string' && type !== 'boolean') {\n            return [new ValidationError(options.key, reportValue, 'stop domain value must be a number, string, or boolean')];\n        }\n\n        if (type !== 'number' && functionType !== 'categorical') {\n            let message = `number expected, ${type} found`;\n            if (supportsPropertyExpression(functionValueSpec) && functionType === undefined) {\n                message += '\\nIf you intended to use a categorical function, specify `\"type\": \"categorical\"`.';\n            }\n            return [new ValidationError(options.key, reportValue, message)];\n        }\n\n        if (functionType === 'categorical' && type === 'number' && (!isFinite(value) || Math.floor(value) !== value)) {\n            return [new ValidationError(options.key, reportValue, `integer expected, found ${value}`)];\n        }\n\n        if (functionType !== 'categorical' && type === 'number' && previousStopDomainValue !== undefined && value < previousStopDomainValue) {\n            return [new ValidationError(options.key, reportValue, 'stop domain values must appear in ascending order')];\n        } else {\n            previousStopDomainValue = value;\n        }\n\n        if (functionType === 'categorical' && value in stopDomainValues) {\n            return [new ValidationError(options.key, reportValue, 'stop domain values must be unique')];\n        } else {\n            stopDomainValues[value] = true;\n        }\n\n        return [];\n    }\n\n    function validateFunctionDefault(options) {\n        return validate({\n            key: options.key,\n            value: options.value,\n            valueSpec: functionValueSpec,\n            style: options.style,\n            styleSpec: options.styleSpec\n        });\n    }\n}\n","// @flow\n\nimport ValidationError from '../error/validation_error';\n\nimport { createExpression, createPropertyExpression } from '../expression';\nimport { deepUnbundle } from '../util/unbundle_jsonlint';\nimport { isStateConstant, isGlobalPropertyConstant, isFeatureConstant } from '../expression/is_constant';\n\nexport default function validateExpression(options: any): Array<ValidationError> {\n    const expression = (options.expressionContext === 'property' ? createPropertyExpression : createExpression)(deepUnbundle(options.value), options.valueSpec);\n    if (expression.result === 'error') {\n        return expression.value.map((error) => {\n            return new ValidationError(`${options.key}${error.key}`, options.value, error.message);\n        });\n    }\n\n    const expressionObj = (expression.value: any).expression || (expression.value: any)._styleExpression.expression;\n\n    if (options.expressionContext === 'property' && (options.propertyKey === 'text-font') &&\n        expressionObj.possibleOutputs().indexOf(undefined) !== -1) {\n        return [new ValidationError(options.key, options.value, `Invalid data expression for \"${options.propertyKey}\". Output values must be contained as literals within the expression.`)];\n    }\n\n    if (options.expressionContext === 'property' && options.propertyType === 'layout' &&\n        (!isStateConstant(expressionObj))) {\n        return [new ValidationError(options.key, options.value, '\"feature-state\" data expressions are not supported with layout properties.')];\n    }\n\n    if (options.expressionContext === 'filter' && !isStateConstant(expressionObj)) {\n        return [new ValidationError(options.key, options.value, '\"feature-state\" data expressions are not supported with filters.')];\n    }\n\n    if (options.expressionContext && options.expressionContext.indexOf('cluster') === 0) {\n        if (!isGlobalPropertyConstant(expressionObj, ['zoom', 'feature-state'])) {\n            return [new ValidationError(options.key, options.value, '\"zoom\" and \"feature-state\" expressions are not supported with cluster properties.')];\n        }\n        if (options.expressionContext === 'cluster-initial' && !isFeatureConstant(expressionObj)) {\n            return [new ValidationError(options.key, options.value, 'Feature data expressions are not supported with initial expression part of cluster properties.')];\n        }\n    }\n\n    return [];\n}\n","\nimport getType from '../util/get_type';\nimport ValidationError from '../error/validation_error';\n\nexport default function validateBoolean(options) {\n    const value = options.value;\n    const key = options.key;\n    const type = getType(value);\n\n    if (type !== 'boolean') {\n        return [new ValidationError(key, value, `boolean expected, ${type} found`)];\n    }\n\n    return [];\n}\n","\nimport ValidationError from '../error/validation_error';\nimport getType from '../util/get_type';\nimport { parseCSSColor } from 'csscolorparser';\n\nexport default function validateColor(options) {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n\n    if (type !== 'string') {\n        return [new ValidationError(key, value, `color expected, ${type} found`)];\n    }\n\n    if (parseCSSColor(value) === null) {\n        return [new ValidationError(key, value, `color expected, \"${value}\" found`)];\n    }\n\n    return [];\n}\n","\nimport ValidationError from '../error/validation_error';\nimport { unbundle } from '../util/unbundle_jsonlint';\n\nexport default function validateEnum(options) {\n    const key = options.key;\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    const errors = [];\n\n    if (Array.isArray(valueSpec.values)) { // <=v7\n        if (valueSpec.values.indexOf(unbundle(value)) === -1) {\n            errors.push(new ValidationError(key, value, `expected one of [${valueSpec.values.join(', ')}], ${JSON.stringify(value)} found`));\n        }\n    } else { // >=v8\n        if (Object.keys(valueSpec.values).indexOf(unbundle(value)) === -1) {\n            errors.push(new ValidationError(key, value, `expected one of [${Object.keys(valueSpec.values).join(', ')}], ${JSON.stringify(value)} found`));\n        }\n    }\n    return errors;\n}\n","\nimport ValidationError from '../error/validation_error';\nimport validateExpression from './validate_expression';\nimport validateEnum from './validate_enum';\nimport getType from '../util/get_type';\nimport { unbundle, deepUnbundle } from '../util/unbundle_jsonlint';\nimport extend from '../util/extend';\nimport { isExpressionFilter } from '../feature_filter';\n\nexport default function validateFilter(options) {\n    if (isExpressionFilter(deepUnbundle(options.value))) {\n        return validateExpression(extend({}, options, {\n            expressionContext: 'filter',\n            valueSpec: { value: 'boolean' }\n        }));\n    } else {\n        return validateNonExpressionFilter(options);\n    }\n}\n\nfunction validateNonExpressionFilter(options) {\n    const value = options.value;\n    const key = options.key;\n\n    if (getType(value) !== 'array') {\n        return [new ValidationError(key, value, `array expected, ${getType(value)} found`)];\n    }\n\n    const styleSpec = options.styleSpec;\n    let type;\n\n    let errors = [];\n\n    if (value.length < 1) {\n        return [new ValidationError(key, value, 'filter array must have at least 1 element')];\n    }\n\n    errors = errors.concat(validateEnum({\n        key: `${key}[0]`,\n        value: value[0],\n        valueSpec: styleSpec.filter_operator,\n        style: options.style,\n        styleSpec: options.styleSpec\n    }));\n\n    switch (unbundle(value[0])) {\n    case '<':\n    case '<=':\n    case '>':\n    case '>=':\n        if (value.length >= 2 && unbundle(value[1]) === '$type') {\n            errors.push(new ValidationError(key, value, `\"$type\" cannot be use with operator \"${value[0]}\"`));\n        }\n        /* falls through */\n    case '==':\n    case '!=':\n        if (value.length !== 3) {\n            errors.push(new ValidationError(key, value, `filter array for operator \"${value[0]}\" must have 3 elements`));\n        }\n        /* falls through */\n    case 'in':\n    case '!in':\n        if (value.length >= 2) {\n            type = getType(value[1]);\n            if (type !== 'string') {\n                errors.push(new ValidationError(`${key}[1]`, value[1], `string expected, ${type} found`));\n            }\n        }\n        for (let i = 2; i < value.length; i++) {\n            type = getType(value[i]);\n            if (unbundle(value[1]) === '$type') {\n                errors = errors.concat(validateEnum({\n                    key: `${key}[${i}]`,\n                    value: value[i],\n                    valueSpec: styleSpec.geometry_type,\n                    style: options.style,\n                    styleSpec: options.styleSpec\n                }));\n            } else if (type !== 'string' && type !== 'number' && type !== 'boolean') {\n                errors.push(new ValidationError(`${key}[${i}]`, value[i], `string, number, or boolean expected, ${type} found`));\n            }\n        }\n        break;\n\n    case 'any':\n    case 'all':\n    case 'none':\n        for (let i = 1; i < value.length; i++) {\n            errors = errors.concat(validateNonExpressionFilter({\n                key: `${key}[${i}]`,\n                value: value[i],\n                style: options.style,\n                styleSpec: options.styleSpec\n            }));\n        }\n        break;\n\n    case 'has':\n    case '!has':\n        type = getType(value[1]);\n        if (value.length !== 2) {\n            errors.push(new ValidationError(key, value, `filter array for \"${value[0]}\" operator must have 2 elements`));\n        } else if (type !== 'string') {\n            errors.push(new ValidationError(`${key}[1]`, value[1], `string expected, ${type} found`));\n        }\n        break;\n\n    }\n\n    return errors;\n}\n","\nimport validate from './validate';\nimport ValidationError from '../error/validation_error';\nimport getType from '../util/get_type';\nimport { isFunction } from '../function';\nimport { unbundle, deepUnbundle } from '../util/unbundle_jsonlint';\nimport { supportsPropertyExpression } from '../util/properties';\n\nexport default function validateProperty(options, propertyType) {\n    const key = options.key;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const value = options.value;\n    const propertyKey = options.objectKey;\n    const layerSpec = styleSpec[`${propertyType}_${options.layerType}`];\n\n    if (!layerSpec) return [];\n\n    const transitionMatch = propertyKey.match(/^(.*)-transition$/);\n    if (propertyType === 'paint' && transitionMatch && layerSpec[transitionMatch[1]] && layerSpec[transitionMatch[1]].transition) {\n        return validate({\n            key,\n            value,\n            valueSpec: styleSpec.transition,\n            style,\n            styleSpec\n        });\n    }\n\n    const valueSpec = options.valueSpec || layerSpec[propertyKey];\n    if (!valueSpec) {\n        return [new ValidationError(key, value, `unknown property \"${propertyKey}\"`)];\n    }\n\n    let tokenMatch;\n    if (getType(value) === 'string' && supportsPropertyExpression(valueSpec) && !valueSpec.tokens && (tokenMatch = /^{([^}]+)}$/.exec(value))) {\n        return [new ValidationError(\n            key, value,\n            `\"${propertyKey}\" does not support interpolation syntax\\n` +\n                `Use an identity property function instead: \\`{ \"type\": \"identity\", \"property\": ${JSON.stringify(tokenMatch[1])} }\\`.`)];\n    }\n\n    const errors = [];\n\n    if (options.layerType === 'symbol') {\n        if (propertyKey === 'text-field' && style && !style.glyphs) {\n            errors.push(new ValidationError(key, value, 'use of \"text-field\" requires a style \"glyphs\" property'));\n        }\n        if (propertyKey === 'text-font' && isFunction(deepUnbundle(value)) && unbundle(value.type) === 'identity') {\n            errors.push(new ValidationError(key, value, '\"text-font\" does not support identity functions'));\n        }\n    }\n\n    return errors.concat(validate({\n        key: options.key,\n        value,\n        valueSpec,\n        style,\n        styleSpec,\n        expressionContext: 'property',\n        propertyType,\n        propertyKey\n    }));\n}\n","\nimport validateProperty from './validate_property';\n\nexport default function validatePaintProperty(options) {\n    return validateProperty(options, 'paint');\n}\n","\nimport validateProperty from './validate_property';\n\nexport default function validateLayoutProperty(options) {\n    return validateProperty(options, 'layout');\n}\n","\nimport ValidationError from '../error/validation_error';\nimport { unbundle } from '../util/unbundle_jsonlint';\nimport validateObject from './validate_object';\nimport validateFilter from './validate_filter';\nimport validatePaintProperty from './validate_paint_property';\nimport validateLayoutProperty from './validate_layout_property';\nimport validateSpec from './validate';\nimport extend from '../util/extend';\n\nexport default function validateLayer(options) {\n    let errors = [];\n\n    const layer = options.value;\n    const key = options.key;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n\n    if (!layer.type && !layer.ref) {\n        errors.push(new ValidationError(key, layer, 'either \"type\" or \"ref\" is required'));\n    }\n    let type = unbundle(layer.type);\n    const ref = unbundle(layer.ref);\n\n    if (layer.id) {\n        const layerId = unbundle(layer.id);\n        for (let i = 0; i < options.arrayIndex; i++) {\n            const otherLayer = style.layers[i];\n            if (unbundle(otherLayer.id) === layerId) {\n                errors.push(new ValidationError(key, layer.id, `duplicate layer id \"${layer.id}\", previously used at line ${otherLayer.id.__line__}`));\n            }\n        }\n    }\n\n    if ('ref' in layer) {\n        ['type', 'source', 'source-layer', 'filter', 'layout'].forEach((p) => {\n            if (p in layer) {\n                errors.push(new ValidationError(key, layer[p], `\"${p}\" is prohibited for ref layers`));\n            }\n        });\n\n        let parent;\n\n        style.layers.forEach((layer) => {\n            if (unbundle(layer.id) === ref) parent = layer;\n        });\n\n        if (!parent) {\n            errors.push(new ValidationError(key, layer.ref, `ref layer \"${ref}\" not found`));\n        } else if (parent.ref) {\n            errors.push(new ValidationError(key, layer.ref, 'ref cannot reference another ref layer'));\n        } else {\n            type = unbundle(parent.type);\n        }\n    } else if (type !== 'background') {\n        if (!layer.source) {\n            errors.push(new ValidationError(key, layer, 'missing required property \"source\"'));\n        } else {\n            const source = style.sources && style.sources[layer.source];\n            const sourceType = source && unbundle(source.type);\n            if (!source) {\n                errors.push(new ValidationError(key, layer.source, `source \"${layer.source}\" not found`));\n            } else if (sourceType === 'vector' && type === 'raster') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a raster source`));\n            } else if (sourceType === 'raster' && type !== 'raster') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a vector source`));\n            } else if (sourceType === 'vector' && !layer['source-layer']) {\n                errors.push(new ValidationError(key, layer, `layer \"${layer.id}\" must specify a \"source-layer\"`));\n            } else if (sourceType === 'raster-dem' && type !== 'hillshade') {\n                errors.push(new ValidationError(key, layer.source, 'raster-dem source can only be used with layer type \\'hillshade\\'.'));\n            } else if (type === 'line' && layer.paint && layer.paint['line-gradient'] &&\n                       (sourceType !== 'geojson' || !source.lineMetrics)) {\n                errors.push(new ValidationError(key, layer, `layer \"${layer.id}\" specifies a line-gradient, which requires a GeoJSON source with \\`lineMetrics\\` enabled.`));\n            }\n        }\n    }\n\n    errors = errors.concat(validateObject({\n        key,\n        value: layer,\n        valueSpec: styleSpec.layer,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        objectElementValidators: {\n            '*'() {\n                return [];\n            },\n            // We don't want to enforce the spec's `\"requires\": true` for backward compatibility with refs;\n            // the actual requirement is validated above. See https://github.com/mapbox/mapbox-gl-js/issues/5772.\n            type() {\n                return validateSpec({\n                    key: `${key}.type`,\n                    value: layer.type,\n                    valueSpec: styleSpec.layer.type,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    object: layer,\n                    objectKey: 'type'\n                });\n            },\n            filter: validateFilter,\n            layout(options) {\n                return validateObject({\n                    layer,\n                    key: options.key,\n                    value: options.value,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    objectElementValidators: {\n                        '*'(options) {\n                            return validateLayoutProperty(extend({layerType: type}, options));\n                        }\n                    }\n                });\n            },\n            paint(options) {\n                return validateObject({\n                    layer,\n                    key: options.key,\n                    value: options.value,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    objectElementValidators: {\n                        '*'(options) {\n                            return validatePaintProperty(extend({layerType: type}, options));\n                        }\n                    }\n                });\n            }\n        }\n    }));\n\n    return errors;\n}\n","\nimport ValidationError from '../error/validation_error';\nimport { unbundle } from '../util/unbundle_jsonlint';\nimport validateObject from './validate_object';\nimport validateEnum from './validate_enum';\nimport validateExpression from './validate_expression';\n\nexport default function validateSource(options) {\n    const value = options.value;\n    const key = options.key;\n    const styleSpec = options.styleSpec;\n    const style = options.style;\n\n    if (!value.type) {\n        return [new ValidationError(key, value, '\"type\" is required')];\n    }\n\n    const type = unbundle(value.type);\n    let errors;\n\n    switch (type) {\n    case 'vector':\n    case 'raster':\n    case 'raster-dem':\n        errors = validateObject({\n            key,\n            value,\n            valueSpec: styleSpec[`source_${type.replace('-', '_')}`],\n            style: options.style,\n            styleSpec\n        });\n        if ('url' in value) {\n            for (const prop in value) {\n                if (['type', 'url', 'tileSize'].indexOf(prop) < 0) {\n                    errors.push(new ValidationError(`${key}.${prop}`, value[prop], `a source with a \"url\" property may not include a \"${prop}\" property`));\n                }\n            }\n        }\n        return errors;\n\n    case 'geojson':\n        errors = validateObject({\n            key,\n            value,\n            valueSpec: styleSpec.source_geojson,\n            style,\n            styleSpec\n        });\n        if (value.cluster) {\n            for (const prop in value.clusterProperties) {\n                const [operator, mapExpr] = value.clusterProperties[prop];\n                const reduceExpr = typeof operator === 'string' ? [operator, ['accumulated'], ['get', prop]] : operator;\n\n                errors.push(...validateExpression({\n                    key: `${key}.${prop}.map`,\n                    value: mapExpr,\n                    expressionContext: 'cluster-map'\n                }));\n                errors.push(...validateExpression({\n                    key: `${key}.${prop}.reduce`,\n                    value: reduceExpr,\n                    expressionContext: 'cluster-reduce'\n                }));\n            }\n        }\n        return errors;\n\n    case 'video':\n        return validateObject({\n            key,\n            value,\n            valueSpec: styleSpec.source_video,\n            style,\n            styleSpec\n        });\n\n    case 'image':\n        return validateObject({\n            key,\n            value,\n            valueSpec: styleSpec.source_image,\n            style,\n            styleSpec\n        });\n\n    case 'canvas':\n        return [new ValidationError(key, null, `Please use runtime APIs to add canvas sources, rather than including them in stylesheets.`, 'source.canvas')];\n\n    default:\n        return validateEnum({\n            key: `${key}.type`,\n            value: value.type,\n            valueSpec: {values: ['vector', 'raster', 'raster-dem', 'geojson', 'video', 'image']},\n            style,\n            styleSpec\n        });\n    }\n}\n","\nimport ValidationError from '../error/validation_error';\nimport getType from '../util/get_type';\nimport validate from './validate';\n\nexport default function validateLight(options) {\n    const light = options.value;\n    const styleSpec = options.styleSpec;\n    const lightSpec = styleSpec.light;\n    const style = options.style;\n\n    let errors = [];\n\n    const rootType = getType(light);\n    if (light === undefined) {\n        return errors;\n    } else if (rootType !== 'object') {\n        errors = errors.concat([new ValidationError('light', light, `object expected, ${rootType} found`)]);\n        return errors;\n    }\n\n    for (const key in light) {\n        const transitionMatch = key.match(/^(.*)-transition$/);\n\n        if (transitionMatch && lightSpec[transitionMatch[1]] && lightSpec[transitionMatch[1]].transition) {\n            errors = errors.concat(validate({\n                key,\n                value: light[key],\n                valueSpec: styleSpec.transition,\n                style,\n                styleSpec\n            }));\n        } else if (lightSpec[key]) {\n            errors = errors.concat(validate({\n                key,\n                value: light[key],\n                valueSpec: lightSpec[key],\n                style,\n                styleSpec\n            }));\n        } else {\n            errors = errors.concat([new ValidationError(key, light[key], `unknown property \"${key}\"`)]);\n        }\n    }\n\n    return errors;\n}\n","\nimport getType from '../util/get_type';\nimport ValidationError from '../error/validation_error';\n\nexport default function validateString(options) {\n    const value = options.value;\n    const key = options.key;\n    const type = getType(value);\n\n    if (type !== 'string') {\n        return [new ValidationError(key, value, `string expected, ${type} found`)];\n    }\n\n    return [];\n}\n","// @flow\nimport validateExpression from './validate_expression';\nimport validateString from './validate_string';\n\nexport default function validateFormatted(options: any) {\n    if (validateString(options).length === 0) {\n        return [];\n    }\n\n    return validateExpression(options);\n}\n","\nimport extend from '../util/extend';\nimport { unbundle, deepUnbundle } from '../util/unbundle_jsonlint';\nimport { isExpression } from '../expression';\nimport { isFunction } from '../function';\n\nimport validateFunction from './validate_function';\nimport validateExpression from './validate_expression';\nimport validateObject from './validate_object';\nimport validateArray from './validate_array';\nimport validateBoolean from './validate_boolean';\nimport validateNumber from './validate_number';\nimport validateColor from './validate_color';\nimport validateConstants from './validate_constants';\nimport validateEnum from './validate_enum';\nimport validateFilter from './validate_filter';\nimport validateLayer from './validate_layer';\nimport validateSource from './validate_source';\nimport validateLight from './validate_light';\nimport validateString from './validate_string';\nimport validateFormatted from './validate_formatted';\n\nconst VALIDATORS = {\n    '*'() {\n        return [];\n    },\n    'array': validateArray,\n    'boolean': validateBoolean,\n    'number': validateNumber,\n    'color': validateColor,\n    'constants': validateConstants,\n    'enum': validateEnum,\n    'filter': validateFilter,\n    'function': validateFunction,\n    'layer': validateLayer,\n    'object': validateObject,\n    'source': validateSource,\n    'light': validateLight,\n    'string': validateString,\n    'formatted': validateFormatted\n};\n\n\n// Main recursive validation function. Tracks:\n//\n// - key: string representing location of validation in style tree. Used only\n//   for more informative error reporting.\n// - value: current value from style being evaluated. May be anything from a\n//   high level object that needs to be descended into deeper or a simple\n//   scalar value.\n// - valueSpec: current spec being evaluated. Tracks value.\n// - styleSpec: current full spec being evaluated.\n\nexport default function validate(options) {\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    const styleSpec = options.styleSpec;\n\n    if (valueSpec.expression && isFunction(unbundle(value))) {\n        return validateFunction(options);\n\n    } else if (valueSpec.expression && isExpression(deepUnbundle(value))) {\n        return validateExpression(options);\n\n    } else if (valueSpec.type && VALIDATORS[valueSpec.type]) {\n        return VALIDATORS[valueSpec.type](options);\n\n    } else {\n        const valid = validateObject(extend({}, options, {\n            valueSpec: valueSpec.type ? styleSpec[valueSpec.type] : valueSpec\n        }));\n        return valid;\n    }\n}\n","\nimport ValidationError from '../error/validation_error';\nimport validateString from './validate_string';\n\nexport default function(options) {\n    const value = options.value;\n    const key = options.key;\n\n    const errors = validateString(options);\n    if (errors.length) return errors;\n\n    if (value.indexOf('{fontstack}') === -1) {\n        errors.push(new ValidationError(key, value, '\"glyphs\" url must include a \"{fontstack}\" token'));\n    }\n\n    if (value.indexOf('{range}') === -1) {\n        errors.push(new ValidationError(key, value, '\"glyphs\" url must include a \"{range}\" token'));\n    }\n\n    return errors;\n}\n","\nimport validateConstants from './validate/validate_constants';\nimport validate from './validate/validate';\nimport latestStyleSpec from './reference/latest';\nimport validateGlyphsURL from './validate/validate_glyphs_url';\n\nimport validateSource from './validate/validate_source';\nimport validateLight from './validate/validate_light';\nimport validateLayer from './validate/validate_layer';\nimport validateFilter from './validate/validate_filter';\nimport validatePaintProperty from './validate/validate_paint_property';\nimport validateLayoutProperty from './validate/validate_layout_property';\n\n/**\n * Validate a Mapbox GL style against the style specification. This entrypoint,\n * `mapbox-gl-style-spec/lib/validate_style.min`, is designed to produce as\n * small a browserify bundle as possible by omitting unnecessary functionality\n * and legacy style specifications.\n *\n * @private\n * @param {Object} style The style to be validated.\n * @param {Object} [styleSpec] The style specification to validate against.\n *     If omitted, the latest style spec is used.\n * @returns {Array<ValidationError>}\n * @example\n *   var validate = require('mapbox-gl-style-spec/lib/validate_style.min');\n *   var errors = validate(style);\n */\nfunction validateStyleMin(style, styleSpec) {\n    styleSpec = styleSpec || latestStyleSpec;\n\n    let errors = [];\n\n    errors = errors.concat(validate({\n        key: '',\n        value: style,\n        valueSpec: styleSpec.$root,\n        styleSpec,\n        style,\n        objectElementValidators: {\n            glyphs: validateGlyphsURL,\n            '*'() {\n                return [];\n            }\n        }\n    }));\n\n    if (style.constants) {\n        errors = errors.concat(validateConstants({\n            key: 'constants',\n            value: style.constants,\n            style,\n            styleSpec\n        }));\n    }\n\n    return sortErrors(errors);\n}\n\nvalidateStyleMin.source = wrapCleanErrors(validateSource);\nvalidateStyleMin.light = wrapCleanErrors(validateLight);\nvalidateStyleMin.layer = wrapCleanErrors(validateLayer);\nvalidateStyleMin.filter = wrapCleanErrors(validateFilter);\nvalidateStyleMin.paintProperty = wrapCleanErrors(validatePaintProperty);\nvalidateStyleMin.layoutProperty = wrapCleanErrors(validateLayoutProperty);\n\nfunction sortErrors(errors) {\n    return [].concat(errors).sort((a, b) => {\n        return a.line - b.line;\n    });\n}\n\nfunction wrapCleanErrors(inner) {\n    return function(...args) {\n        return sortErrors(inner.apply(this, args));\n    };\n}\n\nexport default validateStyleMin;\n","/* parser generated by jison 0.4.15 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,12],$V1=[1,13],$V2=[1,9],$V3=[1,10],$V4=[1,11],$V5=[1,14],$V6=[1,15],$V7=[14,18,22,24],$V8=[18,22],$V9=[22,24];\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"JSONString\":3,\"STRING\":4,\"JSONNumber\":5,\"NUMBER\":6,\"JSONNullLiteral\":7,\"NULL\":8,\"JSONBooleanLiteral\":9,\"TRUE\":10,\"FALSE\":11,\"JSONText\":12,\"JSONValue\":13,\"EOF\":14,\"JSONObject\":15,\"JSONArray\":16,\"{\":17,\"}\":18,\"JSONMemberList\":19,\"JSONMember\":20,\":\":21,\",\":22,\"[\":23,\"]\":24,\"JSONElementList\":25,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"STRING\",6:\"NUMBER\",8:\"NULL\",10:\"TRUE\",11:\"FALSE\",14:\"EOF\",17:\"{\",18:\"}\",21:\":\",22:\",\",23:\"[\",24:\"]\"},\nproductions_: [0,[3,1],[5,1],[7,1],[9,1],[9,1],[12,2],[13,1],[13,1],[13,1],[13,1],[13,1],[13,1],[15,2],[15,3],[20,3],[19,1],[19,3],[16,2],[16,3],[25,1],[25,3]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n // replace escaped characters with actual character\n          this.$ = new String(yytext.replace(/\\\\(\\\\|\")/g, \"$\"+\"1\")\n                     .replace(/\\\\n/g,'\\n')\n                     .replace(/\\\\r/g,'\\r')\n                     .replace(/\\\\t/g,'\\t')\n                     .replace(/\\\\v/g,'\\v')\n                     .replace(/\\\\f/g,'\\f')\n                     .replace(/\\\\b/g,'\\b'));\n          this.$.__line__ =  this._$.first_line;\n        \nbreak;\ncase 2:\n\n            this.$ = new Number(yytext);\n            this.$.__line__ =  this._$.first_line;\n        \nbreak;\ncase 3:\n\n            this.$ = null;\n        \nbreak;\ncase 4:\n\n            this.$ = new Boolean(true);\n            this.$.__line__ = this._$.first_line;\n        \nbreak;\ncase 5:\n\n            this.$ = new Boolean(false);\n            this.$.__line__ = this._$.first_line;\n        \nbreak;\ncase 6:\nreturn this.$ = $$[$0-1];\nbreak;\ncase 13:\nthis.$ = {}; Object.defineProperty(this.$, '__line__', {\n            value: this._$.first_line,\n            enumerable: false\n        })\nbreak;\ncase 14: case 19:\nthis.$ = $$[$0-1]; Object.defineProperty(this.$, '__line__', {\n            value: this._$.first_line,\n            enumerable: false\n        })\nbreak;\ncase 15:\nthis.$ = [$$[$0-2], $$[$0]];\nbreak;\ncase 16:\nthis.$ = {}; this.$[$$[$0][0]] = $$[$0][1];\nbreak;\ncase 17:\nthis.$ = $$[$0-2]; $$[$0-2][$$[$0][0]] = $$[$0][1];\nbreak;\ncase 18:\nthis.$ = []; Object.defineProperty(this.$, '__line__', {\n            value: this._$.first_line,\n            enumerable: false\n        })\nbreak;\ncase 20:\nthis.$ = [$$[$0]];\nbreak;\ncase 21:\nthis.$ = $$[$0-2]; $$[$0-2].push($$[$0]);\nbreak;\n}\n},\ntable: [{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,12:1,13:2,15:7,16:8,17:$V5,23:$V6},{1:[3]},{14:[1,16]},o($V7,[2,7]),o($V7,[2,8]),o($V7,[2,9]),o($V7,[2,10]),o($V7,[2,11]),o($V7,[2,12]),o($V7,[2,3]),o($V7,[2,4]),o($V7,[2,5]),o([14,18,21,22,24],[2,1]),o($V7,[2,2]),{3:20,4:$V0,18:[1,17],19:18,20:19},{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,13:23,15:7,16:8,17:$V5,23:$V6,24:[1,21],25:22},{1:[2,6]},o($V7,[2,13]),{18:[1,24],22:[1,25]},o($V8,[2,16]),{21:[1,26]},o($V7,[2,18]),{22:[1,28],24:[1,27]},o($V9,[2,20]),o($V7,[2,14]),{3:20,4:$V0,20:29},{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,13:30,15:7,16:8,17:$V5,23:$V6},o($V7,[2,19]),{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,13:31,15:7,16:8,17:$V5,23:$V6},o($V8,[2,17]),o($V8,[2,15]),o($V9,[2,21])],\ndefaultActions: {16:[2,6]},\nparseError: function parseError(str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        throw new Error(str);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        function lex() {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function (match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex() {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState(condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip whitespace */\nbreak;\ncase 1:return 6\nbreak;\ncase 2:yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 4\nbreak;\ncase 3:return 17\nbreak;\ncase 4:return 18\nbreak;\ncase 5:return 23\nbreak;\ncase 6:return 24\nbreak;\ncase 7:return 22\nbreak;\ncase 8:return 21\nbreak;\ncase 9:return 10\nbreak;\ncase 10:return 11\nbreak;\ncase 11:return 8\nbreak;\ncase 12:return 14\nbreak;\ncase 13:return 'INVALID'\nbreak;\n}\n},\nrules: [/^(?:\\s+)/,/^(?:(-?([0-9]|[1-9][0-9]+))(\\.[0-9]+)?([eE][-+]?[0-9]+)?\\b)/,/^(?:\"(?:\\\\[\\\\\"bfnrt/]|\\\\u[a-fA-F0-9]{4}|[^\\\\\\0-\\x09\\x0a-\\x1f\"])*\")/,/^(?:\\{)/,/^(?:\\})/,/^(?:\\[)/,/^(?:\\])/,/^(?:,)/,/^(?::)/,/^(?:true\\b)/,/^(?:false\\b)/,/^(?:null\\b)/,/^(?:$)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = parser;\nexports.Parser = parser.Parser;\nexports.parse = function () { return parser.parse.apply(parser, arguments); };\n}\n","\nimport validateStyleMin from './validate_style.min';\nimport ParsingError from './error/parsing_error';\nimport jsonlint from '@mapbox/jsonlint-lines-primitives';\nimport {v8} from './style-spec';\n\n/**\n * Validate a Mapbox GL style against the style specification.\n *\n * @private\n * @alias validate\n * @param {Object|String|Buffer} style The style to be validated. If a `String`\n *     or `Buffer` is provided, the returned errors will contain line numbers.\n * @param {Object} [styleSpec] The style specification to validate against.\n *     If omitted, the spec version is inferred from the stylesheet.\n * @returns {Array<ValidationError|ParsingError>}\n * @example\n *   var validate = require('mapbox-gl-style-spec').validate;\n *   var style = fs.readFileSync('./style.json', 'utf8');\n *   var errors = validate(style);\n */\n\nexport default function validateStyle(style, styleSpec) {\n    if (style instanceof String || typeof style === 'string' || style instanceof Buffer) {\n        try {\n            style = jsonlint.parse(style.toString());\n        } catch (e) {\n            return [new ParsingError(e)];\n        }\n    }\n\n    styleSpec = styleSpec || v8;\n\n    return validateStyleMin(style, styleSpec);\n}\n\nexport const source = validateStyleMin.source;\nexport const light = validateStyleMin.light;\nexport const layer = validateStyleMin.layer;\nexport const filter = validateStyleMin.filter;\nexport const paintProperty = validateStyleMin.paintProperty;\nexport const layoutProperty = validateStyleMin.layoutProperty;\n","// @flow\n\ntype ExpressionType = 'data-driven' | 'cross-faded' | 'cross-faded-data-driven' | 'color-ramp' | 'data-constant' | 'constant';\ntype ExpressionParameters = Array<'zoom' | 'feature' | 'feature-state' | 'heatmap-density' | 'line-progress'>;\n\ntype ExpressionSpecification = {\n    interpolated: boolean,\n    parameters: ExpressionParameters\n}\n\nexport type StylePropertySpecification = {\n    type: 'number',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    transition: boolean,\n    default?: number\n} | {\n    type: 'string',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    transition: boolean,\n    default?: string,\n    tokens?: boolean\n} | {\n    type: 'boolean',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    transition: boolean,\n    default?: boolean\n} | {\n    type: 'enum',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    values: {[string]: {}},\n    transition: boolean,\n    default?: string\n} | {\n    type: 'color',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    transition: boolean,\n    default?: string\n} | {\n    type: 'array',\n    value: 'number',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    length?: number,\n    transition: boolean,\n    default?: Array<number>\n} | {\n    type: 'array',\n    value: 'string',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    length?: number,\n    transition: boolean,\n    default?: Array<string>\n};\n\nimport v8 from './reference/v8.json';\nimport latest from './reference/latest';\nimport format from './format';\nimport migrate from './migrate';\nimport composite from './composite';\nimport diff from './diff';\nimport ValidationError from './error/validation_error';\nimport ParsingError from './error/parsing_error';\nimport { StyleExpression, isExpression, createExpression, createPropertyExpression, normalizePropertyExpression, ZoomConstantExpression, ZoomDependentExpression, StylePropertyFunction } from './expression';\nimport featureFilter from './feature_filter';\nimport Color from './util/color';\nimport { createFunction, isFunction } from './function';\nimport convertFunction from './function/convert';\nimport { eachSource, eachLayer, eachProperty } from './visit';\n\nimport validate from './validate_style';\n\nconst expression = {\n    StyleExpression,\n    isExpression,\n    createExpression,\n    createPropertyExpression,\n    normalizePropertyExpression,\n    ZoomConstantExpression,\n    ZoomDependentExpression,\n    StylePropertyFunction\n};\n\nconst styleFunction = {\n    convertFunction,\n    createFunction,\n    isFunction\n};\n\nconst visit = { eachSource, eachLayer, eachProperty };\n\nexport {\n    v8,\n    latest,\n    format,\n    migrate,\n    composite,\n    diff,\n    ValidationError,\n    ParsingError,\n    expression,\n    featureFilter,\n    Color,\n    styleFunction as function,\n    validate,\n    visit\n};\n\nvalidate.parsed = validate;\nvalidate.latest = validate;\n"],"names":["stringOrChar","module","stringify","passedObj","options","indent","maxLength","replacer","JSON","undefined","slice","Infinity","_stringify","obj","currentIndent","reserved","end","index","items","key","keyPart","keys","length","nextIndent","prettified","start","string","value","toJSON","replace","match","stringLiteral","parse","Array","isArray","push","Object","join","sortKeysBy","reference","const","result","format","style","space","$root","layers","map","layer","stringifyPretty","global","this","require$$0","require$$1","getPropertyReference","propertyName","let","i","Reference","layout","paint","eachSource","callback","k","sources","eachLayer","eachProperty","inner","propertyType","properties","forEach","path","id","set","x","eachLayout","indexOf","eachPaint","resolveConstant","constants","isFunction","stops","renameProperty","from","to","version","source","type","url","coordinates","coord","reverse","property","stop","migrateFontstackURL","input","inputParsed","URL","inputPathnameParts","pathname","split","protocol","hostname","glyphs","migrateFontStack","font","splitAndTrim","s","trim","Error","firstSymbolLayer","symbolLayers","splice","concat","output","inputs","ParsingError","message","super","Scope","parent","bindings","ref","name","expression","get","has","NullType","kind","NumberType","StringType","BooleanType","ColorType","ObjectType","ValueType","ErrorType","CollatorType","FormattedType","array","itemType","N","toString","valueMemberTypes","checkSubtype","expected","t","memberType","kCSSColorTable","clamp_css_byte","Math","round","clamp_css_float","f","parse_css_int","str","parseFloat","parseInt","parse_css_float","css_hue_to_rgb","m1","m2","h","parseCSSColor","css_str","toLowerCase","iv","substr","op","ep","fname","params","alpha","pop","l","exports","e","Color","r","g","b","a","rgba","toArray","black","white","transparent","red","Collator","caseSensitive","diacriticSensitive","locale","sensitivity","collator","Intl","usage","compare","lhs","rhs","resolvedLocale","resolvedOptions","FormattedSection","text","scale","fontStack","Formatted","sections","fromString","unformatted","section","serialize","serialized","validateRGBA","isValue","mixed","item","typeOf","String","Literal","args","context","error","expectedType","evaluate","eachChild","possibleOutputs","RuntimeError","types","number","boolean","object","Assertion","floor","parsed","ctx","fn","arg","FormatExpression","Coercion","Boolean","c","parseColor","num","Number","isNaN","valueToString","child","geometryTypes","EvaluationContext","globals","feature","featureState","_parseColorCache","geometryType","cached","CompoundExpression","_evaluate","definition","definitions","availableOverloads","overloads","filter","signature","signatureContext","ParsingContext","registry","scope","parsedArgs","argParseFailed","errors","ref$1","signatures","stringifySignature","actualTypes","register","CollatorExpression","isFeatureConstant","test","isStateConstant","isGlobalPropertyConstant","Var","boundExpression","part","expr","_parse","annotate","typeAnnotation","Expr","actual","isConstant","ec","isTypeAnnotation","childrenConstant","findStopLessThanOrEqualTo","lastIndex","lowerIndex","upperIndex","currentIndex","currentValue","nextValue","Step","labels","outputs","label","outputType","rest","unshift","labelKey","valueKey","stopCount","UnitBezier","p1x","p1y","p2x","p2y","cx","bx","ax","cy","by","ay","prototype","sampleCurveX","sampleCurveY","sampleCurveDerivativeX","solveCurveX","epsilon","t0","t1","t2","x2","abs","d2","solve","color","d","Xn","Yn","Zn","t3","deg2rad","PI","rad2deg","xyz2lab","pow","lab2xyz","xyz2rgb","rgb2xyz","rgbToLab","rgbColor","y","z","labToRgb","labColor","interpolateLab","interpolateNumber","rgbToHcl","atan2","sqrt","hclToRgb","hclColor","cos","sin","interpolateHue","interpolateHcl","lab","forward","interpolate","hcl","Interpolate","operator","interpolation","interpolationFactor","lower","upper","exponentialInterpolation","base","controlPoints","ub","some","outputLower","outputUpper","lowerValue","upperValue","difference","progress","Coalesce","needsAnnotation","Let","binding","At","Match","inputType","cases","otherwise","labelContext","MAX_SAFE_INTEGER","out","sortedLabels","sort","groupedByOutput","outputLookup","outputIndex","coerceLabel","Case","branches","isComparableType","eq","neq","lt","gt","lteq","gteq","eqCollate","neqCollate","ltCollate","gtCollate","lteqCollate","gteqCollate","makeComparison","compareBasic","compareWithCollator","isOrderComparison","hasUntypedArgument","Comparison","rt","Equals","NotEquals","LessThan","GreaterThan","LessThanOrEqual","GreaterThanOrEqual","NumberFormat","currency","minFractionDigits","maxFractionDigits","minimumFractionDigits","maximumFractionDigits","Length","expressions","v","binarySearch","j","m","varargs","typeToString","zoom","heatmapDensity","lineProgress","accumulated","LN2","E","log","n","LN10","tan","asin","acos","atan","min","max","ceil","isSupportedScript","toUpperCase","success","supportsPropertyExpression","spec","supportsZoomExpression","parameters","supportsInterpolation","interpolated","getType","val","identityFunction","createFunction","propertySpec","isColor","zoomAndFeatureDependent","featureDependent","zoomDependent","extend","default","colorSpace","colorSpaces","innerFun","hashedStops","categoricalKeyType","evaluateExponentialFunction","evaluateIntervalFunction","evaluateCategoricalFunction","create","evaluateIdentityFunction","featureFunctions","zoomStops","featureFunctionStops","bind","_","coalesce","keyType","evaluated","interp","colorspace","evaluatedLower","apply","evaluatedUpper","values","StyleExpression","_warningHistory","_evaluator","_defaultValue","getDefaultValue","_enumValues","evaluateWithoutErrorHandling","console","warn","isExpression","createExpression","parser","getExpectedType","ZoomConstantExpression","_styleExpression","isStateDependent","ZoomDependentExpression","zoomCurve","_interpolationType","createPropertyExpression","isZoomConstant","findZoomCurve","StylePropertyFunction","specification","_parameters","_specification","deserialize","normalizePropertyExpression","err","constant","childResult","enum","formatted","convertLiteral","convertFunction","convertIdentityFunction","tokens","convertTokenString","convertZoomAndPropertyFunction","convertZoomFunction","convertPropertyFunction","getInterpolateOperator","featureFunctionParameters","functionType","getFunctionType","appendStopPair","fixupDegenerateStepCurve","isStep","curve","re","pos","exec","literal","isExpressionFilter","filterSpec","createFilter","convertFilter","compiled","globalProperties","converted","convertComparisonOp","convertNegation","convertDisjunctionOp","convertInOp","convertHasOp","filters","_convertFilter","expectedTypes","children","typechecks","runtimeTypeChecks","conditions","negate","uniformTypes","migrated","migrateToV8","migrateToExpressions","styleIDs","sourceIDs","compositedSourceLayers","compositeID","deepEqual","operations","setStyle","addLayer","removeLayer","setPaintProperty","setLayoutProperty","setFilter","addSource","removeSource","setGeoJSONSourceData","setLayerZoomRange","setLayerProperty","setCenter","setZoom","setBearing","setPitch","setSprite","setGlyphs","setTransition","setLight","sourceId","after","commands","command","sourcesRemoved","updateSource","canUpdateGeoJSON","before","prop","hasOwnProperty","isEqual","diffSources","data","diffLayerPropertyChanges","layerId","klass","pluckId","indexById","group","diffLayers","beforeOrder","afterOrder","beforeIndex","reduce","afterIndex","tracker","clean","beforeLayer","afterLayer","insertBeforeLayerId","lastIndexOf","minzoom","maxzoom","diffStyles","center","bearing","pitch","sprite","transition","light","removeOrAddSourceCommands","beforeLayers","ValidationError","identifier","__line__","line","validateConstants","unbundle","valueOf","deepUnbundle","validateObject","elementSpecs","valueSpec","elementValidators","objectElementValidators","styleSpec","objectKey","elementSpecKey","elementSpec","validateElement","validateSpec","required","validateArray","arraySpec","validateArrayElement","arrayElementValidator","validate","arrayElementSpec","$version","function","arrayIndex","validateNumber","minimum","maximum","validateFunction","functionValueSpec","stopKeyType","stopDomainValues","previousStopDomainValue","previousStopDomainZoom","isZoomFunction","isPropertyFunction","isZoomAndPropertyFunction","validateFunctionStops","validateFunctionDefault","validateFunctionStop","validateStopDomainValue","reportValue","isFinite","validateExpression","expressionContext","expressionObj","propertyKey","validateBoolean","validateColor","validateEnum","validateFilter","validateNonExpressionFilter","filter_operator","geometry_type","validateProperty","layerSpec","layerType","transitionMatch","tokenMatch","validatePaintProperty","validateLayoutProperty","validateLayer","otherLayer","p","sourceType","lineMetrics","validateSource","source_geojson","cluster","clusterProperties","reduceExpr","mapExpr","source_video","source_image","validateLight","lightSpec","rootType","validateString","validateFormatted","VALIDATORS","valid","validateStyleMin","latestStyleSpec","validateGlyphsURL","sortErrors","wrapCleanErrors","paintProperty","layoutProperty","o","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","trace","yy","symbols_","terminals_","productions_","performAction","anonymous","yytext","yyleng","yylineno","yystate","$$","_$","$0","$","first_line","defineProperty","enumerable","table","defaultActions","parseError","hash","recoverable","self","stack","tstack","vstack","lstack","recovering","TERROR","EOF","call","arguments","lexer","sharedState","setInput","yylloc","yyloc","ranges","getPrototypeOf","lex","token","symbol","preErrorSymbol","state","action","yyval","len","newState","errStr","showPosition","loc","last_line","first_column","last_column","range","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","lines","unput","oldLines","more","reject","backtrack_lexer","less","pastInput","past","upcomingInput","next","pre","test_match","indexed_rule","backup","matches","tempMatch","rules","_currentRules","flex","begin","condition","popState","topState","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","require","validateStyle","Buffer","jsonlint","v8","styleFunction","visit","latest"],"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"}